{"version":3,"sources":["webpack:///./src/components/tagpills.js","webpack:///./src/templates/blog-post.js"],"names":["Tags","tags","count","length","slice","TagContainer","map","tag","key","to","className","styled","span","BlogPostTemplate","componentDidMount","this","setupAria","nodeCodepen","document","querySelectorAll","Array","from","forEach","item","setAttribute","props","data","markdownRemark","frontmatter","title","nodeAnchorCodepen","innerHTML","trim","classList","add","render","post","siteTitle","site","siteMetadata","pageContext","previous","next","isPost","contentType","isAboutPage","fields","slug","hasInsertAd","html","indexOf","postSegments","body","PostContent","dangerouslySetInnerHTML","__html","i","split","postBodyItem","push","location","isInsidePage","PostWrapper","description","excerpt","FeaturedImageBanner","src","featured_image","alt","attribution","featured_image_attribution","MetaDiv","BackLink","PostTitle","date","PaginationNav","rel","type","IconType","Back","style","width","Next","React","Component","FeaturedImage","ul","h1","img","div","article","divider","height","href"],"mappings":"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","file":"component---src-templates-blog-post-js-e303d1a8b5c93aedb505.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport _ from \"lodash\"\n\nexport default function Tags({ tags, count }) {\n  if (!tags || tags.length <= 0) {\n    return null\n  }\n\n  tags = tags.slice(0, count)\n\n  return (\n    <TagContainer>\n      {tags.map(tag => {\n        return (\n          <Link key={tag} to={`/tags/${_.kebabCase(tag)}`} className=\"tag-pill\">\n            {tag}\n          </Link>\n        )\n      })}\n    </TagContainer>\n  )\n}\n\nconst TagContainer = styled.span`\n  display: flex;\n  width: 100%;\n  max-width: 1024px;\n  justify-content: center;\n  margin: 0 auto;\n  flex-wrap: wrap;\n  a {\n    font-weight: bold;\n    margin: 0 5px 10px;\n    font-size: 1rem;\n  }\n`\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Tags from \"../components/tagpills\"\nimport Icon, { IconType } from \"../components/icons\"\nimport styled from \"styled-components\"\n\nconst POST_BODY_TAG = \"<!--ad-->\"\n\nclass BlogPostTemplate extends React.Component {\n  componentDidMount() {\n    this.setupAria()\n  }\n  setupAria() {\n    // codepen\n    const nodeCodepen = document.querySelectorAll('iframe[src*=\"codepen\"]')\n    if (nodeCodepen.length) {\n      Array.from(nodeCodepen).forEach(item => {\n        item.setAttribute(\n          \"title\",\n          this.props.data.markdownRemark.frontmatter.title + \" codepen\"\n        )\n      })\n    }\n\n    //remove codepen link\n    const nodeAnchorCodepen = document.querySelectorAll(\n      'a[href*=\"codepen.io/\"]'\n    )\n    if (nodeAnchorCodepen.length) {\n      Array.from(nodeAnchorCodepen).forEach(item => {\n        if (item.innerHTML.trim() === \"\") {\n          item.classList.add(\"sr-only\")\n          item.setAttribute(\"tabindex\", -1)\n          item.setAttribute(\"aria-hidden\", \"true\")\n          item.innerHTML = \"codepen\"\n        }\n      })\n    }\n  }\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    let isPost = !(\n      post.frontmatter &&\n      post.frontmatter.contentType &&\n      post.frontmatter.contentType === \"works\"\n    )\n\n    const isAboutPage = post.fields.slug === \"/2009/about-me/\"\n    const hasInsertAd = post.html.indexOf(POST_BODY_TAG) !== -1\n\n    const postSegments = []\n    let body = <PostContent dangerouslySetInnerHTML={{ __html: post.html }} />\n    if (hasInsertAd) {\n      const postbody = post.html.split(POST_BODY_TAG)\n      let i = 0\n      for (const postBodyItem of postbody) {\n        postSegments.push(\n          <PostContent\n            key={`pbody${i}`}\n            dangerouslySetInnerHTML={{ __html: postBodyItem }}\n          />\n        )\n        i++\n      }\n\n      body = <>{postSegments}</>\n    }\n\n    return (\n      <Layout location={this.props.location} title={siteTitle} isInsidePage>\n        <PostWrapper>\n          <SEO\n            title={post.frontmatter.title}\n            description={post.frontmatter.description || post.excerpt}\n          />\n          <FeaturedImageBanner\n            src={post.frontmatter.featured_image}\n            alt={post.frontmatter.title}\n            attribution={post.frontmatter.featured_image_attribution}\n          />\n          <MetaDiv>\n            <BackLink isPost={isPost} title={post.frontmatter.title} />\n          </MetaDiv>\n          <PostTitle>\n            {post.frontmatter.title}\n            <p className=\"date\">{post.frontmatter.date}</p>\n            <Tags tags={post.frontmatter.tags} />\n          </PostTitle>\n          {body}\n          {!isAboutPage && (\n            <PaginationNav>\n              <li>\n                {next && (\n                  <Link to={next.fields.slug} rel=\"next\">\n                    <Icon type={IconType.Back} style={{ width: \"0.625rem\" }} />{\" \"}\n                    {next.frontmatter.title}\n                  </Link>\n                )}\n              </li>\n              <li>\n                {previous && (\n                  <Link to={previous.fields.slug} rel=\"prev\">\n                    {previous.frontmatter.title}{\" \"}\n                    <Icon type={IconType.Next} style={{ width: \"0.625rem\" }} />\n                  </Link>\n                )}\n              </li>\n            </PaginationNav>\n          )}\n        </PostWrapper>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n        featured_image\n        featured_image_attribution\n        contentType\n        tags\n      }\n    }\n  }\n`\n\nfunction FeaturedImageBanner({ src, alt, attribution }) {\n  if (!src) {\n    return null\n  }\n\n  return (\n    <figure className=\"featured-image\">\n      <div className=\"container\">\n        <FeaturedImage src={src} alt={alt} />\n      </div>\n      {attribution && (\n        <figcaption dangerouslySetInnerHTML={{ __html: attribution }} />\n      )}\n    </figure>\n  )\n}\n\n//\n// Styles\n//\n\nconst PaginationNav = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  list-style: none;\n  padding: 0;\n  margin-left: 1rem;\n  margin-top: 3rem;\n  padding-top: 1rem;\n\n  @media screen and (max-width: 900px) {\n    display: block;\n    padding: 0.5rem 0.5rem 1rem;\n    text-align: center;\n    margin: 0;\n    li {\n      display: block;\n      padding: 0.4rem 0;\n      margin: 0.3rem 0 0;\n\n      svg {\n        margin-right: 0.2rem;\n        margin-left: 0.2rem;\n      }\n    }\n  }\n`\n\nconst PostTitle = styled.h1`\n  text-align: center;\n  margin: 3rem auto;\n  font-size: 3.5rem;\n  max-width: 1024px;\n\n  .date {\n    font-size: 0.875rem;\n  }\n\n  @media screen and (max-width: 1200px) {\n    font-size: 3rem;\n  }\n\n  @media screen and (max-width: 960px) {\n    font-size: 2.5rem;\n  }\n\n  @media screen and (max-width: 768px) {\n    font-size: 2rem;\n  }\n`\n\nconst FeaturedImage = styled.img`\n  width: 100%;\n  object-fit: cover;\n`\n\nconst MetaDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-family: Montserrat;\n  font-size: 0.875rem;\n  max-width: 1024px;\n  margin: 2rem auto 0;\n\n  @media screen and (max-width: 768px) {\n    margin-top: 1rem;\n  }\n`\n\nconst PostWrapper = styled.article`\n  max-width: 1024px;\n  margin: 0 auto;\n  padding: 0 56px 56px;\n  border-radius: 5px;\n  background-color: #fff;\n  overflow: hidden;\n\n  @media screen and (max-width: 900px) {\n    padding: 0 20px 1.5rem;\n  }\n\n  @media screen and (max-width: 768px) {\n    padding: 0 1rem 20px;\n    border-radius: 0;\n  }\n\n  .featured-image {\n    display: block;\n    padding: 0;\n    margin: 0 auto;\n    position: relative;\n    left: -56px;\n    top: 0;\n    width: calc(100% + 112px);\n\n    [class*=\"container\"] {\n      height: 350px;\n      margin: 0;\n      padding: 0;\n\n      @media screen and (max-width: 768px) {\n        height: 175px;\n      }\n    }\n\n    figcaption {\n      --caption-color: #c2c4cc;\n\n      display: inline-block;\n      position: absolute;\n      bottom: 15px;\n      right: 0;\n      margin-top: -56px;\n      padding: 0.5rem 1rem;\n      color: var(--caption-color);\n      background-color: rgba(0, 0, 0, 0.2);\n      font-size: 0.75rem;\n\n      @media screen and (max-width: 768px) {\n        right: 2rem;\n      }\n\n      a {\n        color: var(--caption-color);\n      }\n    }\n\n    image {\n      display: block;\n      margin: 0;\n      padding: 0;\n    }\n\n    .container {\n      max-width: 100%;\n    }\n  }\n\n  [class*=\"container\"] {\n    display: flex;\n    justify-content: center;\n    max-width: 1024px;\n    height: 350px;\n    margin: 0 auto;\n    padding: 0;\n  }\n\n  .demo {\n    border: 2px dashed #d3d3d3;\n    padding: 2.5rem;\n    margin: 2.5rem 0;\n    overflow: auto;\n\n    label {\n      font-size: 1rem;\n      font-weight: bold;\n    }\n\n    @media screen and (max-width: 768px) {\n      padding: 15px 5px 20px;\n    }\n  }\n\n  blockquote {\n    margin: 2.5rem 0;\n  }\n\n  .gatsby-highlight {\n    margin: 2.5rem 0;\n\n    pre {\n      padding: 1.6rem;\n    }\n  }\n`\n\nconst PostContent = styled.div`\n  max-width: 1024px;\n  margin: 0 auto;\n  font-weight: normal;\n  line-height: 1.75;\n  h1 {\n    font-size: 3.052rem;\n  }\n  h2 {\n    font-size: 2.441rem;\n  }\n  h3 {\n    font-size: 1.953rem;\n  }\n  h4 {\n    font-size: 1.563rem;\n  }\n  h5 {\n    font-size: 1.25rem;\n  }\n  small,\n  .text_small {\n    font-size: 0.8rem;\n  }\n\n  @media screen and (max-width: 768px) {\n    h1 {\n      font-size: 2rem;\n    }\n    h2 {\n      margin-top: 2rem;\n      font-size: 1.841em;\n    }\n    h3 {\n      font-size: 1.703rem;\n    }\n    h4 {\n      font-size: 1.563rem;\n    }\n    h5 {\n      font-size: 1.25rem;\n    }\n  }\n`\n\nfunction BackLink({ isPost, title }) {\n  let divider = (\n    <Icon type={IconType.Next} style={{ width: \"9px\", height: \"14px\" }} />\n  )\n\n  return isPost ? (\n    <span>\n      <a href=\"/\" alt={\"Home\"}>\n        {\"Home\"}\n      </a>{\" \"}\n      {divider} {title}\n    </span>\n  ) : (\n    <span>\n      <Link to=\"/works\" alt={\"Portfolio\"}>\n        {\"Portfolio\"}\n      </Link>{\" \"}\n      {divider} {title}\n    </span>\n  )\n}\n"],"sourceRoot":""}