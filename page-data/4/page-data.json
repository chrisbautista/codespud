{"componentChunkName":"component---src-templates-blog-list-js","path":"/4","result":{"data":{"site":{"siteMetadata":{"title":"CodeSpud"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"Streaming Video giant, Youtube, recently announced a Resume feature along with other improvements for their groundbreaking service. (Cheers! claps! Bring in the beer! LOL).","html":"<div style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\">\n  <img border=\"0\" src=\"http://3.bp.blogspot.com/_BBS5bkzuLXM/SrTbWg_-NnI/AAAAAAAACg8/C9JxDO7GXBk/s320/youtubea23123.jpg\">\n</div>\n<p>  Streaming Video giant, Youtube, recently announced a Resume feature along with other improvements for their groundbreaking service. (Cheers! claps! Bring in the beer! LOL). <!--more-->Gone will be the days where you had to restart a video just to continue where you left of. Now you dont need to restart a whole video or pause till the video fully loads then skip every so and so, just to pick up where you last watched.</p>\n<p>Note the feature will only work for resumes past the 3 minute mark ‚Äì meaning any resumes less than mentioned duration are ignored ‚Äì so you need to run the video from the start again. A perfectly logical limitation.¬†</p>\n<p>This addition is a big step forward for online media players ‚Äì hopefully other video sites will follow suit. üôÇ ¬†For more info go <a href=\"http://googlesystem.blogspot.com/2009/09/youtube-resume.html\">here</a></p>","fields":{"slug":"/2009/resume-on-youtube/"},"frontmatter":{"date":"September 19, 2009","title":"Resume on Youtube!","featured_image":null,"tags":["website","video"]}}},{"node":{"excerpt":"Google announced recently in its official blog, that it has acquired reCAPTCHA. CAPTCHA is a web technology made out of necessity. It primarily is used to prevent BOTS (or automated apps designed to do malicious tasks) by adding an extra step to site pages that require human interaction.","html":"<p>Google announced recently in its official blog, that it has acquired reCAPTCHA. <a href=\"http://en.wikipedia.org/wiki/CAPTCHA\" target=\"_blank\">CAPTCHA</a> is a web technology made out of necessity. It primarily is used to prevent BOTS (or automated apps designed to do malicious tasks) by adding an extra step to site pages that require human interaction. <!--more-->Yes, they‚Äôre the annoying barely readable text images when you register/login for a site.</p>\n<div style=\"clear: both; text-align: center;\">\n  <a href=\"http://4.bp.blogspot.com/_BBS5bkzuLXM/SrSXzUCQrPI/AAAAAAAACgk/abV4JRYilQE/s1600-h/recaptcha-1231dasdqd.gif\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/_BBS5bkzuLXM/SrSXzUCQrPI/AAAAAAAACgk/abV4JRYilQE/s320/recaptcha-1231dasdqd.gif\"></a>\n</div>\n<p>Anyway, this move by Google is more than just for improving it‚Äôs CAPTCHA capabilities. As they explain, reCAPTCHA technology will improve Google projects that require reading text in images. The best to benefit from this are¬†<span style=\"font-family: Arial; font-size: 13px; white-space: pre;\">Google‚Äôs <span style=\"font-family: 'Times New Roman'; font-size: medium; white-space: normal;\">¬†<a href=\"http://books.google.com/\" target=\"_blank\">Books</a> project and the recent <a href=\"http://fastflip.googlelabs.com/\" target=\"_blank\">Fast Flip </a> zine search. For more info see the <a href=\"http://googleblog.blogspot.com/2009/09/teaching-computers-to-read-google.html\" target=\"_blank\">official announcement.</a></span></span></p>","fields":{"slug":"/2009/google-got-recaptcha/"},"frontmatter":{"date":"September 19, 2009","title":"Google got reCAPTCHA","featured_image":null,"tags":["google","security","frontend"]}}},{"node":{"excerpt":"Do you know how to send an SOS in morse code? Do you know your birthstone? Or the winners of the Oscars since 1927 ? MIStupid.com has an assortment of trivia and topics not known by the most of us. As a bonus they have categories with games and puzzles you can play with when you catch a bit of an information overload.","html":"<p>Do you know how to send an SOS in morse code? Do you know your birthstone? Or the winners of the Oscars since 1927 ? MIStupid.com has an assortment of trivia and topics not known by the most of us. As a bonus they have categories with games and puzzles you can play with when you catch a bit of an information overload.</p>\n<!--more-->\n<div>\n  <a href=\"http://mistupid.com/contents.htm\" target=\"_blank\">http://mistupid.com/contents.htm</a>\n</div>\n<p>No matter how trivial or uninteresting the fact is <strong><span style=\"font-weight: bold;\">MIStupid.com</span></strong> will surely have it, otherwise go back to <strong><span style=\"font-weight: bold;\">Google</span></strong> (hehehe). Well okay it‚Äôs not Encarta but its free and <strong><span style=\"color: green;\"><span style=\"color: green; font-weight: bold;\">GREEN</span></span></strong> üôÇ</p>\n<p>Enjoy!</p>\n<p>potato</p>","fields":{"slug":"/2009/m-i-stupid/"},"frontmatter":{"date":"September 19, 2009","title":"M I STUPID?","featured_image":null,"tags":["website","fun"]}}},{"node":{"excerpt":"Happy New Year! As promised I made a rudimentary Linux shell script utilizing the tar and gzip commands to archive or make backups. If you‚Äôre new to shell scripting you might like to read these articles. Unix shell scripting with ksh/bash\nAdvanced Bash-Scripting Guide If you‚Äôre lazy like I am. Don‚Äôt worry I‚Äôll explain parts of the code.","html":"<p>Happy New Year!</p>\n<p>As promised I made a rudimentary Linux shell script utilizing the tar and gzip commands to archive or make backups. If you‚Äôre new to shell scripting you might like to read these articles.</p>\n<p><a href=\"http://www.dartmouth.edu/~rc/classes/ksh/print_pages.shtml\">Unix shell scripting with ksh/bash</a>\n<a href=\"http://tldp.org/LDP/abs/html/\">Advanced Bash-Scripting Guide</a></p>\n<p>If you‚Äôre lazy like I am. Don‚Äôt worry I‚Äôll explain parts of the code.</p>\n<!--more-->\n<p>Our goal is to make a shell script to create backups (in tar-gzip versions) of the folders we want unto a safe location on a disk. We want to be able to list all the folders and have the script loop through them. Now that‚Äôs settled, we can proceed to the code.<!--more--></p>\n<p>First, don‚Äôt forget to tell linux what scripting interpreter to use. I usually use <span style=\"font-style: italic;\">sh</span> but there are others like <span style=\"font-style: italic;\">bash and ksh</span>. But many experts suggest to use sh for portability to older systems.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/sh</span></code></pre></div>\n<p>Next, we configure the script. The lines below enumerates the folders I want archived ,then stores them in a SHELL VARIABLE named FOLDERS. (duhh!..)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># ‚Äî LIST OF FILES/FOLDERS TO BACKUP</span>\n<span class=\"token assign-left variable\">FOLDERS</span><span class=\"token operator\">=</span>‚Äù/var/www/html /opt/sandbox‚Äù</code></pre></div>\n<p>This line saves the folder path I want the archives to be stored in.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># ‚Äî BACKUP HERE</span>\n<span class=\"token assign-left variable\">BACKUPFOLDER</span><span class=\"token operator\">=</span>‚Äù/opt/backup‚Äù</code></pre></div>\n<p><em>REMINDER</em><br>\nMake sure that the backup folder exist. If it doesn‚Äôt run the lines below on the console.</p>\n<div style=\"background-color: green; color: white; padding: 10px;\">\n  > mkdir /opt/backup<br /> > chown root:root /opt/backup<br /> > chmod 755 /opt/backup\n</div>\n<p>Here I configure the command string I want to use. Regarding the details of the command I used ‚Äì see this <a href=\"http://potatokorner.blogspot.com/2008/12/linux-snippet-backup-using-tar-and-gzip.html\">[link]</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># ‚Äî ARCHIVE COMMAND</span>\n<span class=\"token assign-left variable\">COMPRESSCMD</span><span class=\"token operator\">=</span>‚Äùtar czfv ‚Äú</code></pre></div>\n<p>Here we use the <span style=\"font-style: italic;\">for</span> command to loop through all the items we listed in <span style=\"font-style: italic;\">$FOLDERS</span> and store it in another variable, <span style=\"font-style: italic;\">$itm</span>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">## loop thru folders</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">itm</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$FOLDERS</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n<span class=\"token comment\"># commands here</span>\n‚Ä¶.\n<span class=\"token keyword\">done</span></code></pre></div>\n<p>These lines configures the commands we‚Äôre going to use inside the loop. The first line generates a formatted file path for my archive, $FARCHIVE.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">FARCHIVE</span><span class=\"token operator\">=</span><span class=\"token variable\">$BACKUPFOLDER</span>/<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">basename</span> $itm<span class=\"token variable\">`</span></span>_<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> <span class=\"token parameter variable\">-n</span><span class=\"token variable\">`</span></span>_<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">date</span> +%F<span class=\"token variable\">`</span></span>.tgz\n<span class=\"token variable\">$COMPRESSCMD</span> <span class=\"token variable\">$FARCHIVE</span> <span class=\"token variable\">$itm</span></code></pre></div>\n<p>If you‚Äôve noticed I used the tilde symbol(`). Yes they are not single quotation marks. In linux console, any commands enclosed within tildes are ran first and the result is returned as a string. So for example <span style=\"font-style: italic;\">$itm</span> is equal to <span style=\"font-style: italic;\">/var/www/html</span>. The resulting FARCHIVE value will be:</p>\n<div style=\"background-color: green; color: white; padding: 10px;\">\n  > echo $FARCHIVE<br /> /opt/backup/html_potato_2009-01-02.tgz\n</div>\n<p>The second line uses $FARCHIVE as well as the command we configured earlier and runs it.</p>\n<p>For a breakdown of the enclosed commands we used.</p>\n<p>echo the last(base) name in a path string.</p>\n<div style=\"background-color: green; color: white; padding: 10px;\">\n  > basename /var/www/html<br /> html\n</div>\n<p>echo the system‚Äôs computer name.</p>\n<div style=\"background-color: green; color: white; padding: 10px;\">\n  > uname -n<br /> potato\n</div>\n<p>echo the current date in this format (YYYY-MM-DD)</p>\n<div style=\"background-color: green; color: white; padding: 10px;\">\n  > date +%F<br /> 2009-01-02\n</div>\n<p>Here is the full script.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/sh</span>\n<span class=\"token comment\">#set -x</span>\n<span class=\"token comment\">#‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì</span>\n<span class=\"token comment\"># ID: cabBackup.sh ‚Äì BACKUP items to folder</span>\n<span class=\"token comment\"># USAGE: ./cabBackup.sh</span>\n<span class=\"token comment\">#‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì</span>\n<span class=\"token comment\"># AUTHOR: codespud 2008-2009</span>\n<span class=\"token comment\"># VERSION: 0.01</span>\n\n<span class=\"token comment\"># TODO: arguments</span>\n<span class=\"token comment\"># TODO: config file</span>\n<span class=\"token comment\"># TODO: functions</span>\n<span class=\"token comment\"># TODO: filtering</span>\n\n<span class=\"token comment\"># Sources</span>\n<span class=\"token comment\"># http://www.hsrl.rutgers.edu/ug/shell_help.html</span>\n\n<span class=\"token comment\"># PATH</span>\n<span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span>/opt/bin:/usr/bin:/bin<span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">export</span> <span class=\"token environment constant\">PATH</span>\n\n<span class=\"token comment\"># CONFIG</span>\n\n<span class=\"token comment\"># ‚Äî LIST OF FILES/FOLDERS TO BACKUP if not specified via console</span>\n\n<span class=\"token assign-left variable\">FOLDERS</span><span class=\"token operator\">=</span>‚Äù/var/www/html /opt/sandbox‚Äù\n<span class=\"token comment\">#FOLDERS=‚Äù‚Äù</span>\n\n<span class=\"token comment\"># ‚Äî BACKUP HERE</span>\n<span class=\"token assign-left variable\">BACKUPFOLDER</span><span class=\"token operator\">=</span>‚Äù/opt/backup‚Äù\n\n<span class=\"token comment\"># ‚Äî ARCHIVE COMMAND</span>\n<span class=\"token assign-left variable\">COMPRESSCMD</span><span class=\"token operator\">=</span>‚Äùtar czfv ‚Äù\n\n<span class=\"token comment\"># ‚Äî DO NOT EDIT BEYOND THIS LINE (unless if you knw what ur doing ;] ) ‚Äî</span>\n\n<span class=\"token comment\"># Check if the folder exists if not make it</span>\n<span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-d</span> <span class=\"token variable\">$BACKUPFOLDER</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> <span class=\"token variable\">$BACKUPFOLDER</span> <span class=\"token operator\">||</span> <span class=\"token builtin class-name\">:</span>\n\n<span class=\"token function\">chown</span> root:root <span class=\"token variable\">$BACKUPFOLDER</span>\n<span class=\"token function\">chmod</span> <span class=\"token number\">755</span> <span class=\"token variable\">$BACKUPFOLDER</span>\n\n<span class=\"token comment\"># clean the screen</span>\n<span class=\"token function\">clear</span>\n\n<span class=\"token builtin class-name\">echo</span> lets start\n\n<span class=\"token comment\">## loop thru folders</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">itm</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$FOLDERS</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n\n<span class=\"token assign-left variable\">FARCHIVE</span><span class=\"token operator\">=</span><span class=\"token variable\">$BACKUPFOLDER</span>/<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">basename</span> $itm<span class=\"token variable\">`</span></span>_<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> <span class=\"token parameter variable\">-n</span><span class=\"token variable\">`</span></span>_<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">date</span> +%F<span class=\"token variable\">`</span></span>.tgz\n<span class=\"token variable\">$COMPRESSCMD</span> <span class=\"token variable\">$FARCHIVE</span> <span class=\"token variable\">$itm</span>\n\n<span class=\"token keyword\">done</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token punctuation\">..</span> <span class=\"token keyword\">done</span></code></pre></div>\n<p>Now name and save the file. I named mine <span style=\"font-weight: bold;\"><span style=\"font-style: italic;\">cabBackup.sh</span></span>.</p>\n<p>You need to make the script executable.</p>\n<div style=\"background-color: green; color: white; padding: 10px;\">\n  > chmod 755 ./cabBackup.sh\n</div>\n<p>There you have it just run it from the console.</p>\n<div style=\"background-color: green; color: white; padding: 10px;\">\n  > ./cabBackup.sh\n</div>\n<p>There are still some things we need to do to make it a fully fledged automation script like configuration files, some pre-process commands and error trapping. But what we have now serves our purpose very well. I‚Äôll post revisions of this script so watch for that.</p>\n<p>Links<br>\n<a href=\"http://www.dartmouth.edu/~rc/classes/ksh/print_pages.shtml\">http://www.dartmouth.edu/~rc/classes/ksh/print_pages.shtml</a><br>\n<a href=\"http://tldp.org/LDP/abs/html/\">http://tldp.org/LDP/abs/html/</a><br>\n<a href=\"http://potatokorner.blogspot.com/2008/12/linux-snippet-backup-using-tar-and-gzip.html\">Linux: Snippet ‚Äì Backup using Tar and gzip</a></p>","fields":{"slug":"/2009/how-to-write-a-backup-shell-script-using-tar-and-gnu-zip/"},"frontmatter":{"date":"January 02, 2009","title":"How to Write a Backup Shell Script using Tar and Gnu Zip","featured_image":null,"tags":["bash","linux","script"]}}},{"node":{"excerpt":"As a programmer i have to make multiple revisions of a project on a remote site. Getting things wrong and messing up the files tend to happen more often than I am comfortable with. Fortunately, making quick backups in linux is a breeze. You can either make a folder and just copy your existing files via recursive cp command or; archive it using tar and gzip. Personally, I prefer archives since they tend to be smaller and easy to manage.","html":"<p>As a programmer i have to make multiple revisions of a project on a remote site. Getting things wrong and messing up the files tend to happen more often than I am comfortable with. Fortunately, making quick backups in linux is a breeze. You can either make a folder and just copy your existing files via recursive cp command or; archive it using tar and gzip. Personally, I prefer archives since they tend to be smaller and easy to manage. <!--more--></p>\n <div>\n<span style=\"font-weight: bold;\"><span ><span>Install tar and gzip</span></span></span>\n</div>\n  \n <div>\n<span ><span> You can be hardcore and download the source for tar and gzip and recompile them.</span></span>\n</div>\n  \n <div>\n<span style=\"font-size: 13px;\">¬†</span>\n</div>\n  \n <div>\n<a href=\"http://www.gnu.org/software/tar\"><span>http://www.gnu.org/software/tar/</span></a>\n</div>\n  \n <div>\n<a href=\"http://www.gzip.org/\"><span>http://www.gzip.org/</span></a>\n</div>\n  \n \n  \n <div>\n<span> Or you can use apt-get or yum(Yellow dog Updater, Modified ? &#8212; weird name ) to do it for you.</span>\n</div>\n  \n \n  \n <div>\n<span> yum install tar</span>\n</div>\n  \n <div>\n<span> yum install gzip</span>\n</div>\n  \n \n  \n <div>\n<span style=\"font-weight: bold;\">Sample commands</span>\n</div>\n  \n \n  \n <div>\n<span style=\"font-weight: bold;\">Archive a folder ( -c means create )</span>\n</div>\n  \n <pre><span style=\"color: #009900;\">tar cvf - folder | gzip &gt; archive.tar.gz</span></pre>\n  \n <div>\n<span style=\"font-family: 'courier new';\">Archive a file</span>\n</div>\n  \n <pre><span style=\"font-style: italic;\"><span style=\"color: #009900;\">tar cvf - filename | gzip &gt; archive.tar.gz</span></pre>\n  \n <div>\n<span style=\"font-weight: bold;\">Archive files</span></span></span>\n</div>\n  \n <pre><span style=\"font-style: italic;\"><span style=\"color: #009900;\">tar cvf - filename1 filename2 | gzip &gt; archive.tar.g</span></pre>\n  \n <div>\n<span style=\"font-weight: bold;\">Alternative format (-z means use gzip to compress)</span></span></span>\n</div>\n  \n <pre><span style=\"font-style: italic;\"><span style=\"color: #009900;\">tar cvzf /path/to/dir/archive.tar.gz filename</span></pre>\n  \n <pre><span style=\"font-style: italic;\"><span style=\"color: #009900;\">tar cvzf /path/to/dir/archive.tar.gz filename1 filename</span></pre>\n  \n <div>\n<span style=\"font-weight: bold;\">Extracting (-x means extract )</span></span></span>\n</div>\n  \n <pre><span style=\"font-style: italic;\"><span style=\"color: #009900;\">tar xvzf /path/to/dir/archive.tar.gz</span></pre>\n  \n \n  \n <div>\n<span> There are other ways and tools to make your archives. But we&#8217;ll continue with that some other time. For the really lazy, I&#8217;ll make a bash script that uses tar and gzip in a later post so watch for that.</span></span>\n</div>\n  \n \n  \n <div>\n<span ><span> I hope my article helped some newbies out there. Mabuhay!</span></span>\n</div>","fields":{"slug":"/2008/linux-snippet-backup-using-tar-and-gzip/"},"frontmatter":{"date":"December 07, 2008","title":"Linux: Snippet ‚Äì Backup using Tar and gzip","featured_image":"/linux-logo.jpg","tags":["linux","script","bash"]}}}]},"tags":{"group":[{"fieldValue":"IDE","totalCount":1},{"fieldValue":"UX","totalCount":3},{"fieldValue":"accessibility","totalCount":8},{"fieldValue":"angularjs","totalCount":1},{"fieldValue":"animation","totalCount":3},{"fieldValue":"api","totalCount":1},{"fieldValue":"bash","totalCount":4},{"fieldValue":"best-practice","totalCount":3},{"fieldValue":"blogging","totalCount":1},{"fieldValue":"browser","totalCount":2},{"fieldValue":"cheatsheat","totalCount":1},{"fieldValue":"cheatsheet","totalCount":1},{"fieldValue":"cli","totalCount":1},{"fieldValue":"css","totalCount":5},{"fieldValue":"development","totalCount":1},{"fieldValue":"devops","totalCount":1},{"fieldValue":"error","totalCount":1},{"fieldValue":"forms","totalCount":1},{"fieldValue":"frontend","totalCount":10},{"fieldValue":"fun","totalCount":4},{"fieldValue":"game","totalCount":2},{"fieldValue":"google","totalCount":4},{"fieldValue":"html","totalCount":2},{"fieldValue":"images","totalCount":1},{"fieldValue":"javascript","totalCount":7},{"fieldValue":"layout","totalCount":1},{"fieldValue":"linux","totalCount":3},{"fieldValue":"list","totalCount":1},{"fieldValue":"personal","totalCount":4},{"fieldValue":"productivity","totalCount":2},{"fieldValue":"reactjs","totalCount":1},{"fieldValue":"script","totalCount":2},{"fieldValue":"scripts","totalCount":1},{"fieldValue":"security","totalCount":1},{"fieldValue":"snippets","totalCount":2},{"fieldValue":"tip","totalCount":1},{"fieldValue":"tools","totalCount":1},{"fieldValue":"tutorial","totalCount":1},{"fieldValue":"typescript","totalCount":1},{"fieldValue":"ui","totalCount":4},{"fieldValue":"utility","totalCount":1},{"fieldValue":"video","totalCount":2},{"fieldValue":"vscode","totalCount":1},{"fieldValue":"vue","totalCount":1},{"fieldValue":"web-development","totalCount":7},{"fieldValue":"webapps","totalCount":1},{"fieldValue":"website","totalCount":11}]}},"pageContext":{"limit":12,"skip":36,"numPages":4,"currentPage":4}},"staticQueryHashes":["2139210123","63159454"]}