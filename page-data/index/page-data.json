{"componentChunkName":"component---src-templates-blog-list-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"CodeSpud"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"I remember using JqueryUI’s datepicker. It was my go-to calendar widget in the past. It was great.  I just drop an input box give it an “id” and then run a function.  You get a great-looking calendar picker for your forms. It was a great bit of software engineering. I’ve used it in a lot of my old projects and clients were impressed.","html":"<p>I remember using JqueryUI’s datepicker. It was my go-to calendar widget in the past. It was great.  I just drop an input box give it an “id” and then run a function. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#datepicker'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">datepicker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You get a great-looking calendar picker for your forms. It was a great bit of software engineering. I’ve used it in a lot of my old projects and clients were impressed.  <!--more--></p>\n<p>Some experts strongly advise against adding too many third-party libraries to websites. The extra library requests increase the time your site loads. Now that <a href=\"https://www.browserstack.com/guide/why-website-speed-is-important\">site speed is has grown increasingly important to users</a>, developers must be smart when deciding on the modules they add to their projects. Resources like javascript files block the browser from rendering until it’s fully loaded. </p>\n<p>One less library to load is a few seconds slashed from your site’s loading time. Read <a href=\"https://web.dev/optimizing-content-efficiency-loading-third-party-javascript/\">Web.dev</a> for more information regarding optimizing content loading with regards to third-party javascript.</p>\n<h2>Use native elements</h2>\n<p>One strategy to optimize a website is to use native elements like the date and time inputs instead of third-party widgets. </p>\n<p>Aside from reducing the fat from your site, using native elements improves accessibility. You don’t need the extra coding necessary to make these elements work with assistive technologies.</p>\n<h2>Date input</h2>\n<p>The date input looks pretty much like any regular input element. Some browsers(e.g. Chrome) will have a placeholder corresponding to the date value and a calendar icon button.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>birthdate<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Birth date:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>date<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>birthdate<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>birthdate<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<div class=\"demo\">\n<label for=\"birthdate\">Birth date:</label>\n<input type=\"date\" id=\"birthdate\" name=\"birthdate\" />\n</div>\n<h2>Month input</h2>\n<p>The month input lets a user enter a month and year. The input value returned is of format <code class=\"language-text\">YYYY-MMM</code> where <code class=\"language-text\">YYYY</code> is the four-digit year and <code class=\"language-text\">MM</code> is the month number e.g. January is <code class=\"language-text\">01</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>Month<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>month<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"demo\">\n    <label>\n        <span>Month</span>\n        <input type=\"month\" >\n    </label>\n</div>\n<h2>Week input</h2>\n<p>Use the <code class=\"language-text\">week</code> input type when you want to accept the week number of a year in your forms. It lets a user set up a picker for the 52/53 weeks out of a year.  </p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>Week<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>week<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>week<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"demo\">\n<label>\n    <span>Week</span>\n    <input type=\"week\" name=\"week\" >\n</label>\n</div>\n<h2>Time input</h2>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>Time: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>time<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"demo\">\n<label>\n        <span>Time: </span>\n        <input type=\"time\">\n</label>\n</div>\n<h2>Date-time local input</h2>\n<p>The <code class=\"language-text\">datetime-local</code> input type provides a way to input both date and time.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>Date and time - local: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>datetime-local<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"demo\">\n<label>\n    <span>Date and time - local: </span>\n    <input type=\"datetime-local\">\n</label>\n</div>\n<h2>Specifying a range</h2>\n<p>There will be instances where you want to limit the possible values. For example, your form is about a month-long event. You can prevent your clients from setting up a date that is outside your set event by specifying a range. This is done with the minimum(min) and maximum(max) values.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>event<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Event date:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>date<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>eventdate<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>eventdate<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">min</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2023-04-01<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">max</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2023-04-30<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></code></pre></div>\n<div class=\"demo\">\n<label for=\"eventdate\">Event date:</label>\n<input type=\"date\" id=\"eventdate\" name=\"eventdate\" min=\"2023-04-01\" max=\"2023-04-30\"/>\n</div>\n<p>Another use case is preventing inputting past dates, for example when scheduling airplane flights. Specifying the minimum value to date before today is what you want to do. </p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>Today is: 2022-12-01<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>flightstartdate<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Event date:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>date<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>flightstartdate<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>flightstartdate<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<div class=\"demo\">\n<p><label for=\"flightstartdate\">Event date:</label>\n<input type=\"date\" id=\"flightstartdate\" name=\"flightstartdate\" min=\"2023-12-01\" /></p>\n</div>\n<p>Limit the <code class=\"language-text\">week</code> input to a certain year, e.g. selling monthly tickets for a sports season. </p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>Event Month<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>month<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">min</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2022-01<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2022-12<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"demo\">\n    <label>\n        <span>Event Month</span>\n        <input type=\"month\" min=\"2022-01\" value=\"2022-12\" >\n    </label>\n</div>\n<p>The format for the <code class=\"language-text\">min</code> and <code class=\"language-text\">max</code> setup for the <code class=\"language-text\">week</code> input type is “year-week number” e.g. <code class=\"language-text\">2023-W01</code> for the first week of 2023.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>Week<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>week<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>week<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">min</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2023-W01<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">max</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2023-W52<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"demo\">\n<label>\n    <span>Week</span>\n    <input type=\"week\" name=\"week\" min=\"2023-W01\" max=\"2023-W52\">\n</label>\n</div>\n<h2>Adding Suggestions</h2>\n<p>Using <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist\">datalist</a> element we can add hardcoded values as options to a date input. A great use case for this is suggested dates for restaurant reservations in the current week.</p>\n<h3>Date input with datalist</h3>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>Recommended dates: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>date<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">list</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>recent-dates<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>datalist</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>recent-dates<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2022-01-01<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2022-02-14<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2022-05-01<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>datalist</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"demo\">\n<div>\n    <label>\n    <span>Recommended dates: </span>\n    <input type=\"date\" list=\"recent-dates\">\n    <datalist id=\"recent-dates\">\n        <option value=\"2022-01-01\">\n        <option value=\"2022-02-14\">\n        <option value=\"2022-05-01\">\n    </datalist>\n    </label>\n</div>\n</div>\n<h3>Time input with datalist</h3>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>Popular hours: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>time<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">list</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>popularHours<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>datalist</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>popularHours<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>12:00<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>13:00<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>14:00<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>datalist</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"demo\">\n<label>\n    <span>Popular hours: </span>\n    <input type=\"time\" list=\"popularHours\">\n    <datalist id=\"popularHours\">\n    <option value=\"12:00\">\n    <option value=\"13:00\">\n    <option value=\"14:00\">\n    </datalist>\n</label>\n</div>\n<h2>Wrapping up</h2>\n<p>Support is <a href=\"https://caniuse.com/input-datetime\">limited but getting better</a>. Most modern browsers support these input types. Do be wary and check your audience. I still had clients before who stuck with IE until IE11 was decommissioned. For old browsers, the input type will default to a regular input text box. Make sure to provide a fallback in those cases. </p>\n<p>I am glad we have native options for something ubiquitous as requiring a date/time input. Try using these new input types in your next project. </p>","fields":{"slug":"/2022/working_with_date_tag/"},"frontmatter":{"date":"December 09, 2022","title":"Working with Date and Time Input","featured_image":"/blog/nick-hillier-yD5rv8_WzxA-unsplash.jpg","tags":["web-development","html","best-practice","forms"]}}},{"node":{"excerpt":"I am a big Big Bang Theory fan. So is my wife. Her absolute favorite character is Sheldon Cooper. In one of the episodes Sheldon proposed an improved version of the rock-paper-scissors game.  This version extends the possible moves to five(5). The additional two options would increase the possibility of win chances as it minimizes the chance of both players picking the same move.","html":"<p>I am a big Big Bang Theory fan. So is my wife. Her absolute favorite character is Sheldon Cooper. In one of the episodes Sheldon proposed an improved version of the rock-paper-scissors game.  This version extends the possible moves to five(5). The additional two options would increase the possibility of win chances as it minimizes the chance of both players picking the same move. <!--more--></p>\n<p>I made a javascript version. Using a few emojis for the hand graphics. I made a very simple interface</p>\n<h2>Game logic</h2>\n<p>The game logic is pretty simple. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">build gameboard\n\n:play\n  get user move\n  get computer move\n  get win_or_lose\n  increment round\n  if (round equals max_round) goto display_winner\n  goto play \n\n:display_winner\n...\nend game</code></pre></div>\n<p>To check who wins per round we need to know the rules of the game (taken from Big Bang Theory wiki).</p>\n<ul>\n<li>Scissors cuts Paper</li>\n<li>Paper covers Rock</li>\n<li>Rock crushes Lizard</li>\n<li>Lizard poisons Spock</li>\n<li>Spock smashes Scissors</li>\n<li>Scissors decapitates Lizard</li>\n<li>Lizard eats Paper</li>\n<li>Paper disproves Spock</li>\n<li>Spock vaporizes Rock</li>\n<li>(and as it always has) Rock crushes Scissors</li>\n</ul>\n<p>Here are the rules again in javascript.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">winOrLose</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">playerChoice<span class=\"token punctuation\">,</span> computerChoice</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">(</span>playerChoice <span class=\"token operator\">===</span> Hands<span class=\"token punctuation\">.</span>Scissor <span class=\"token operator\">&amp;&amp;</span> computerChoice <span class=\"token operator\">===</span> Hands<span class=\"token punctuation\">.</span>Paper<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n        <span class=\"token punctuation\">(</span>playerChoice <span class=\"token operator\">===</span> Hands<span class=\"token punctuation\">.</span>Paper <span class=\"token operator\">&amp;&amp;</span> computerChoice <span class=\"token operator\">===</span> Hands<span class=\"token punctuation\">.</span>Rock<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n        <span class=\"token punctuation\">(</span>playerChoice <span class=\"token operator\">===</span> Hands<span class=\"token punctuation\">.</span>Rock <span class=\"token operator\">&amp;&amp;</span> computerChoice <span class=\"token operator\">===</span> Hands<span class=\"token punctuation\">.</span>Lizard<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n        <span class=\"token punctuation\">(</span>playerChoice <span class=\"token operator\">===</span> Hands<span class=\"token punctuation\">.</span>Lizard <span class=\"token operator\">&amp;&amp;</span> computerChoice <span class=\"token operator\">===</span> Hands<span class=\"token punctuation\">.</span>Spock<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n        <span class=\"token punctuation\">(</span>playerChoice <span class=\"token operator\">===</span> Hands<span class=\"token punctuation\">.</span>Scissors <span class=\"token operator\">&amp;&amp;</span> computerChoice <span class=\"token operator\">===</span> Hands<span class=\"token punctuation\">.</span>Lizard<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n\n        <span class=\"token punctuation\">(</span>playerChoice <span class=\"token operator\">===</span> Hands<span class=\"token punctuation\">.</span>Rock <span class=\"token operator\">&amp;&amp;</span> computerChoice <span class=\"token operator\">===</span> Hands<span class=\"token punctuation\">.</span>Scissor<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n        <span class=\"token punctuation\">(</span>playerChoice <span class=\"token operator\">===</span> Hands<span class=\"token punctuation\">.</span>Spock <span class=\"token operator\">&amp;&amp;</span> computerChoice <span class=\"token operator\">===</span> Hands<span class=\"token punctuation\">.</span>Scissors<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n        <span class=\"token punctuation\">(</span>playerChoice <span class=\"token operator\">===</span> Hands<span class=\"token punctuation\">.</span>Lizard <span class=\"token operator\">&amp;&amp;</span> computerChoice <span class=\"token operator\">===</span> Hands<span class=\"token punctuation\">.</span>Paper<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n        <span class=\"token punctuation\">(</span>playerChoice <span class=\"token operator\">===</span> Hands<span class=\"token punctuation\">.</span>Paper <span class=\"token operator\">&amp;&amp;</span> computerChoice <span class=\"token operator\">===</span> Hands<span class=\"token punctuation\">.</span>Spock<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n        <span class=\"token punctuation\">(</span>playerChoice <span class=\"token operator\">===</span> Hands<span class=\"token punctuation\">.</span>Spock <span class=\"token operator\">&amp;&amp;</span> computerChoice <span class=\"token operator\">===</span> Hands<span class=\"token punctuation\">.</span>Rock<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// player wins </span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>I love hash tables! They minimize code complexity further. This is a great alternative to the code above.  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">WIN_OR_LOSE</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Hands<span class=\"token punctuation\">.</span>Paper<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Hands<span class=\"token punctuation\">.</span>Rock<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Hands<span class=\"token punctuation\">.</span>Rock<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Hands<span class=\"token punctuation\">.</span>Scissor<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Hands<span class=\"token punctuation\">.</span>Scissor<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Hands<span class=\"token punctuation\">.</span>Paper<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token constant\">WIN_OR_LOSE</span><span class=\"token punctuation\">[</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>playerChoice<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>computerChoice<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// player wins</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The previous bit of code only handle win conditions, what if both players choose the same move? We test this even before testing win conditions,</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">winOrLose</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">playerChoice<span class=\"token punctuation\">,</span> computerChoice</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>playerChoice <span class=\"token operator\">===</span> computerChoice<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// show tie result  </span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Finally, we test if the game has ended. Whenever a round ends, we check if the game should end(finished 10 rounds). If yes, we calculate the game result and notify the user.   </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">function</span> <span class=\"token function\">gameOver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>yourScore<span class=\"token punctuation\">,</span> pcScore<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> score<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>games <span class=\"token operator\">>=</span> maxGames<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      done <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>yourScore <span class=\"token operator\">===</span> pcScore<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">gameResult</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"It's a draw!\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tie\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>yourScore <span class=\"token operator\">></span> pcScore<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">gameResult</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You win!\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"win\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">gameResult</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You lost!\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"lose\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<h2>User interface</h2>\n<p>For the input, I made five(5) buttons with images corresponding each game move. When the game starts you are prompted to choose a move. When the player chooses a game move, it’s checked agains winning conditions and depending on the outcome computes the score. </p>\n<figure>\n<img src=\"/blog/Rock-Paper-Scissors-Lizard-Spock-Game-Images.png\" alt=\"rock-paper-scissors game buttons\">\n<figcaption>\n<span>Rock-paper-scissors-lizard-spock game buttons</span>\n</figcaption>\n</figure>\n<p><a href=\"https://codepen.io/chrisbautista/pen/dyJyebW\"><div><iframe \n        height='400'\n        title='chrisbautista embedded pen' \n        scrolling='no' \n        src='//codepen.io/chrisbautista/embed/preview/dyJyebW/?height=400&theme-id=dark&default-tab=html,result' \n        frameborder='no' \n        allowtransparency='true' \n        allowfullscreen='true' \n        style='width: 100%;'></iframe></div></a></p>\n<p>Play the <a href=\"https://codepen.io/chrisbautista/full/dyJyebW\">game</a>. Enjoy!</p>","fields":{"slug":"/2022/rock-paper-scissors-lizard-spock/"},"frontmatter":{"date":"November 20, 2022","title":"Rock-Paper-Scissors-Lizard-Spock Game","featured_image":"/blog/marcus-wallis-R1qHDAEnCmc-unsplash.jpg","tags":["interactive","javascript","ui","animated","game"]}}},{"node":{"excerpt":"I wanted to see how much we can do with CSS transitions. No keyframe animations at all. Although you would have more control over the…","html":"<p>I wanted to see how much we can do with CSS transitions. No keyframe animations at all. Although you would have more control over the animation with keyframes. For our demo, we need a simple change from one state to another. CSS transitions are all we need.</p>\n<p>In one of the animations, I used a technique I call the Sibling-Follow technique. Before you ask, I did not invent this technique - just the name. It’s nice to name something when it’s this good. I got it from one of the front-end sites - I forgot which.</p>\n<p>When I understood the technique, my brain ran on overdrive. I was sketching different designs I can abuse this technique. I used this to animate the highlight element in the codepen below.</p>\n<h2>Sibling-Follow Technique</h2>\n<p>To illustrate, let me walk you through a simple tab bar animation. If you are familiar with Material UI tabs, it behaves very similarly. </p>\n<p><a href=\"https://mui.com/material-ui/react-tabs/\">Material UI tabs</a></p>\n<p>Make a list of buttons. Then, add another element and set the class as follow. We will use this to target and style the element later.</p>\n<p><strong>HTML</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span> button 1 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span> button 2 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span> button 3 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span> button 4 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span> button 5 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>follow<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><strong>CSS</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">ul,\nli</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">list-style-type</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">ul</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">li</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.follow</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> left 0.4s ease-in-out<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 2px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>I made a Javascript event handler to add the <code class=\"language-text\">active</code> class to the list item containing the button I clicked.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span> button 1 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>active<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span> button 2 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span> button 3 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span> button 4 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span> button 5 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>follow<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Using the sibling selector(~), we apply the desired styling for .follow element. In this case, I want to position the mentioned element above the second list button.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">li:nth-child(2):active ~ .follow</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 60px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>I added the other left positions to the rest of the <code class=\"language-text\">li</code> items with some trial and error. </p>\n<p>Voila! We get a simple highlight animation, ala Material UI tabs, with a few markup and the magic of CSS transitions.</p>\n<p>For my demo, I hardcoded the <code class=\"language-text\">left</code> property to the CSS for each transition state. Add a Javascript function to calculate these coordinates for you. Then you do not need to hardcode these values, especially if you are going to incorporate this into your professional work. </p>\n<p>You can make it fancier by animating the width of the follow tab at different speeds. Apply different easing functions. Make many follow elements running at various vectors. I will let you play with that on your own. Let your imagination run free.</p>\n<p>I made five tab bar styles. Feel free to use these in your projects.</p>\n<h2>Wrapping up</h2>\n<ul>\n<li>You can make pretty amazing things with CSS, HTML, and a bit of Javascript.</li>\n<li>Sibling-Follow technique is a simple method you can use to create tab animations.</li>\n<li>CSS transition is your friend if you want to animate a simple change from one state to another.  </li>\n</ul>\n<p>All in all, I was happy with the outcome of this exercise. I had so much fun and learned a lot. We could use some accessibility work though. 😜 That is something we can work on for another day.</p>\n<p>I will explain the other animation styles I made with this pen later.</p>\n<p><strong>Update</strong>: This pen got showcased in a Codepen Spark newsletter last April 14th (link below). Thanks Codepen!😀🎉</p>\n<p><a href=\"https://codepen.io/spark/280\">Tab Bar Styles, AI Games, and Some Good Forking News (April 14)</a>.</p>\n<p><a href=\"https://codepen.io/chrisbautista/pen/NWXjqLN\"><div><iframe \n        height='400'\n        title='chrisbautista embedded pen' \n        scrolling='no' \n        src='//codepen.io/chrisbautista/embed/preview/NWXjqLN/?height=400&theme-id=dark&default-tab=html,result' \n        frameborder='no' \n        allowtransparency='true' \n        allowfullscreen='true' \n        style='width: 100%;'></iframe></div></a></p>","fields":{"slug":"/2022/animated-bottom-bar/"},"frontmatter":{"date":"November 19, 2022","title":"Animated Bottom Bar","featured_image":"/blog/sigmund-_dJCBtdUu74-unsplash.jpg","tags":["web-development","javascript","css","ui","animated","interactive"]}}},{"node":{"excerpt":"As part of the work I do for my employer, I analyze UI elements on our product to check if we need to re-engineer the component to improve…","html":"<p>As part of the work I do for my employer, I analyze UI elements on our product to check if we need to re-engineer the component to improve accessibility. One of the accessibility challenges I have reworked for our company site is the tabbed container.</p>\n<p>Imagine a folder with pages you can flip through using tabs at the edges. That is the closest I can imagine when I think of tabbed containers. This concept is very straightforward, tabs on top of the container  serves as buttons to access the corresponding grouped content. Only one grouped content is shown at any time. I love tabbed containers because they are very good at cleaning up the interface when you have so much content but have the same level of importance.</p>\n<p>For the new component, I based it on the <a href=\"https://www.w3.org/WAI/ARIA/apg/patterns/tabpanel/\">tab panel pattern</a> suggested in the WAI(<em>Web Accessibility Initiative</em>) site.</p>\n<h2>Focus Order</h2>\n<p>Using the keyboard with the old tabbed container, the focus goes from the first tab, 2nd tab, 3rd tab, and so on. Then the tab content 1, etc. One would need to finish traversing the tabs before you can access the first tab’s content. Its confusing to screenreader users as you would assume when you focus on the tab you can read the content.</p>\n<figure>\n  <img src=\"/blog/build_an_accessible_tab_container___focus_order.png\" alt=\"incorrect focus order\">\n  <figcaption>\n    <p>The navigation sequence does not follow the natural way of content consumption.</p>\n  </figcaption>\n</figure>\n<p>To improve the focus/read order, we should make the first tab active and prevent the inactive tabs from getting the focus sequence. Navigation will go directly to the content when tabbing from the tab button. Another rule some UI developers forget is to make sure hidden elements do not get focus. So for the previous example, the “Services” and “Products” content panels and its content must not receive focus.</p>\n<figure>\n  <img src=\"/blog/build_an_accessible_tab_container___correct_focus_order.png\" alt=\"corrected focus order\">\n  <figcaption>\n    <p> Now the user is only able to access the currently active tab and tab content</p>.\n  </figcaption>\n</figure>\n<h2>Keyboard controls</h2>\n<p>The old tab container component only supported the <kbd>Tab</kbd> key to navigate which only follows the DOM sequence. A few tabs are tolerable but once you get more than five(5) tabs it can be annoying for the user to use.</p>\n<p>To make the component keyboard accessible, we add behavior that follows the WAI tab panel pattern. The tab navigation activates once the focus goes to the active tab (button). Using the <kbd>Arrow Left</kbd> and <kbd>Arrow Right</kbd>, the user can navigate to the previous and next tabs correspondingly.</p>\n<p>Additionally, you have two types of tab container behavior. <em>Automatic</em> tab containers will switch to a new tab when focus changes. While, <em>Manual</em> tabbed containers use <kbd>Enter</kbd> or <kbd>Spacebar</kbd> key to confirm the switch. I will use the “automatic” behavior for our demo.</p>\n<figure>\n  <img src=\"/blog/build_an_accessible_tab_container___active_tab_focused.png\" alt=\"active tab is focused\">\n  <figcaption>\n    <p>The active tab shows focused styling when navigating with the keyboard. Using the arrow keys we can navigate to other tabs.</p>  \n  </figcaption>\n</figure>\n<h2>ARIA attributes</h2>\n<figure>\n  <blockquote> Accessible Rich Internet Applications (ARIA) is a set of roles and attributes that define ways to make web content and web applications (especially those developed with JavaScript) more accessible to people with disabilities.\n  </blockquote>\n  <figcaption>\n    <cite>- MDN</cite>  \n  </figcaption>\n</figure>\n<p>It would have been nice if there was a tab panel semantic tag. There is none so we use ARIA attributes. On their own ARIA attributes do not do much. It does not add styling or extra behavior. But for screen readers or tools that aid people with impairments, ARIA attributes paint a picture that a browser can interpret.</p>\n<p>For the tabbed container, we set the following ARIA attributes. </p>\n<table>\n  <thead>\n  <tr>\n    <th style=\"min-width: 200px;\">ARIA attribute/role</th>\n    <th>Description</th>\n  </tr>\n  </thead>\n  <tbody>\n  <tr>\n    <td>role=tablist</td>\n    <td>Container for tab buttons</td>\n  </tr>\n  <tr>\n    <td>role=tab</td>\n    <td>Tab button element. Contains the label for the currently active content.</td>\n  </tr>\n  <tr>\n    <td>role=tabpanel</td>\n    <td>Container for the currently active tab content</td>\n  </tr>\n  <tr>\n    <td>aria-selected=true</td>\n    <td>Tab button is selected and content is visible</td>\n  </tr>\n  <tr>\n    <td>aria-selected=false</td>\n    <td>Tab button is inactive and content is hidden</td>\n  </tr>\n  <tr>\n    <td>tabindex=-1</td>\n    <td>Removes the element from tab order sequence. We use this for the inactive tabs and hidden tab content. Aids in focus management.</td>\n  </tr>\n  <tr>\n    <td>aria-controls=ID</td>\n    <td>Set on the tab button. ID refers to the associated tab content</td>\n  </tr>\n  <tr>\n    <td>aria-labelledby=ID</td>\n    <td>Set on the tab content container. Refers to the tab button serving as a label for the content.</td>\n  </tr>\n  <tr>\n    <td>tabindex=0</td>\n    <td>Set on the tab content container. Puts the container back to tab sequence</td>\n  </tr>\n  </tbody>\n</table>\n<h2>Our tabbed container in action</h2>\n<p><a href=\"https://codepen.io/chrisbautista/pen/XWZgrVx\"><div><iframe \n        height='400'\n        title='chrisbautista embedded pen' \n        scrolling='no' \n        src='//codepen.io/chrisbautista/embed/preview/XWZgrVx/?height=400&theme-id=dark&default-tab=html,result' \n        frameborder='no' \n        allowtransparency='true' \n        allowfullscreen='true' \n        style='width: 100%;'></iframe></div></a></p>","fields":{"slug":"/2022/accessible-tab-container/"},"frontmatter":{"date":"October 10, 2022","title":"Build an Accessible Tab Container","featured_image":"/blog/chiara-f-MI8He1NWPWg-unsplash.jpg","tags":["web-development","accessibility","ui","animated","best-practice"]}}},{"node":{"excerpt":"Tell me if this sounds familiar. You have a workstation that can not support the technology stack your project requires. Having VMs or Docker installed on your machine is out of the question since it can barely support office software.  You end up building a development machine(perhaps an Linux box) as a  desktop server. This works well for a while until you need to access your development setup remotely. Luckily there’s a number of ways you can achieve this.","html":"<p>Tell me if this sounds familiar. You have a workstation that can not support the technology stack your project requires. Having VMs or Docker installed on your machine is out of the question since it can barely support office software.  You end up building a development machine(perhaps an Linux box) as a  desktop server. This works well for a while until you need to access your development setup remotely. Luckily there’s a number of ways you can achieve this. <!--more--> </p>\n<h2>The Options</h2>\n<ul>\n<li><strong>Local editor/IDE via SFTP</strong>. - This entails connecting via SFTP and uploading the code changes manually. Problem with this setup, you need to run a lot of steps to test your code. Upload (manually) then run tests, rinse and repeat. Don’t expect to use any IDE functionality here. Not very useful but it works when the need arises. I recommend using <a href=\"https://winscp.net/eng/download.php\">WinSCP</a> on windows for this.  </li>\n<li>\n<p><strong>Local editor/IDE with automatic syncing via an SFTP client.</strong> - Very similar to the first option minus the manual uploads. Some SFTP clients would have a “sync on changes” option. WinSCP has the  <a href=\"https://winscp.net/eng/docs/task_keep_up_to_date\">“keep up to date”</a> feature which serves this purpose well. </p>\n<p>For Apple machines, <a href=\"https://panic.com/\">Panic’s</a> Coda/Transmit setup is a great example.  </p>\n<p>Additionally, using a plugin, some editors/IDE’s (e.g. SublimeText, VSCode, etc.) would be able to carry out the same use case. In my experience though, managing files via plugin is not very consistent. When it fails, it fails spectacularly with me ending up trying to resolve corrupted files. </p>\n</li>\n<li>\n<p><strong>Local IDE using rsync</strong> - This setup leverages <a href=\"https://rsync.samba.org/features.html\">rsync</a> to synchronize your changes automatically. Using rsync is similar to using SFTP with automatic syncing. The difference is that rsync by default only upload/download files that changed. The most popular setup is to watch for file changes and then trigger a rsync command to upload only the delta. No manual uploading but not very different from the first one on this list. You can use inotifywait or gulps watch functionality to monitor file changes then manually trigger a function or command based on rsync.</p>\n<p><strong>Using inotifywait</strong>,</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">#watch_and_sync.sh</span>\n\n<span class=\"token comment\">#!/bin.ssh</span>\n<span class=\"token keyword\">while</span> inotifywait <span class=\"token parameter variable\">-r</span> <span class=\"token parameter variable\">-e</span> modify,create,delete /directory<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n    <span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-avz</span> /directory /target\n<span class=\"token keyword\">done</span></code></pre></div>\n<p>Using gulp and <a href=\"https://www.npmjs.com/package/gulp-rsync\">gulp-rsync</a>,</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> gulp-rsync --save-dev</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//gulpfile.js</span>\n<span class=\"token keyword\">var</span> gulp <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'gulp'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> rsync <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'gulp-rsync'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'watch'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> watchFiles <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'./src/**'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'./templates/**'</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> watcher <span class=\"token operator\">=</span> gulp<span class=\"token punctuation\">.</span><span class=\"token function\">watch</span><span class=\"token punctuation\">(</span> watchedFiles<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'sync'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'sync'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> gulp<span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'js/**'</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span> <span class=\"token function\">rsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">hostname</span><span class=\"token operator\">:</span> <span class=\"token string\">'remote.server.com'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">destination</span><span class=\"token operator\">:</span> <span class=\"token string\">'~/project/'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li><strong>Local IDE using SSHFS</strong> - SSHFS(Secured SHell File Systems) can mount directories and files from remote machines as if they were local folders. Using this logic you can set up your remotely available codebase into your local IDE. This is very easy to put up since most Linux machines support SSH and it does not need any other libraries to install and configure. Although useful it’s not very consistently executed in most clients.\nFor windows, check out <a href=\"https://www.nsoftware.com/sftp/netdrive/\">NetDrive</a> and <a href=\"http://www.secfs.net/winfsp/\">WinSFP</a> </li>\n<li>\n<p><strong>Remote editing using vi/vim</strong> - Developing using vim on the development machine is a very powerful setup. This requires opening a terminal and connecting to the remote machine via SSH. Then navigating to your code base and running vim. You use vi’s powerful text editing features to edit files. A bit of tweaking and installing some vi/vim plugins would make vim work more like an IDE. The problem most have is the learning curve but once you get around the idea of coding on the terminal, you might end up loving it or not. :) Another minor issue is when you need to upload new files like images and PDFs. If you’re used to dragging and dropping your files into your IDE this might be off-putting. You will need a separate SFTP client to do upload these files. </p>\n<p>Here’s a link to my <a href=\"https://github.com/chrisbautista/vim-workflow/blob/master/.vimrc\">vimrc</a>. Search through Github there’s no shortage of excellent vim configurations that might fit your liking. </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token string\">\"====================\n\"</span> <span class=\"token function\">vim</span> workflow\n<span class=\"token string\">\" @chrisbautista \"</span>codespud<span class=\"token string\">\"\n\"</span> features:\n<span class=\"token string\">\" - asynchronous linting\n\"</span> - prettier\n<span class=\"token string\">\" - dark theme\n\"</span> - tree <span class=\"token function\">file</span> view via NerdTree\n<span class=\"token string\">\" - fuzzy file search\n\"</span> - <span class=\"token function\">more</span> info on status and tab lines\n<span class=\"token string\">\" - keyboard mappings\n\"</span> - php debugging\n<span class=\"token string\">\" - use , as &lt;leader>\n\"</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span>\n<span class=\"token punctuation\">..</span>.</code></pre></div>\n<p>My recommendation to you is to use vim without modifications. Once you get the hang of it, you might NOT even need plugins. </p>\n</li>\n<li>\n<p><strong>Remote editing using a cloud editor</strong> - This has been quite popular lately. My favorite is <a href=\"https://en.wikipedia.org/wiki/Cloud9_IDE\">Cloud9 IDE</a>. Even <a href=\"https://aws.amazon.com/cloud9/\">Amazon Web Services(AWS) uses it</a> for its cloud services. </p>\n<p>Using the <a href=\"https://github.com/c9/core\">Cloud9 IDE</a> project you can set up any code base and make it available via the browser. It is not as powerful as Eclipse ( or clones e.g. PHPStorm, Netbeans) but it keeps your code and tasks in the same machine — not yet at least. But it is significantly better than most options in this list as its very similar to how you would develop in a regular IDE. Most would have terminal emulation as well and support for plugins. The problem is you can’t really do this for all your projects. Since you will be exposing the editor via the browser you still run the risk having your code hacked easier than without it. Like any internal application, there are ways to secure it.  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Install</span>\n<span class=\"token function\">git</span> clone https://github.com/c9/core.git c9sdk\n<span class=\"token builtin class-name\">cd</span> c9sdk\nscripts/install-sdk.sh\n\n<span class=\"token comment\"># Start Cloud9 and expose /var/www/html</span>\n<span class=\"token function\">node</span> server.js <span class=\"token parameter variable\">-w</span> /var/www/html</code></pre></div>\n</li>\n<li>\n<p><strong>VSCode with remote development pack</strong> - To be precise, the <a href=\"https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack\">Remote development pack</a> is only available through <a href=\"https://code.visualstudio.com/insiders/\">VS Code Insiders edition</a> as of yet. No local code needed locally when using the remote development pack. The best benefit is all your beloved VSCode plugins can run on the code as if it’s local.\nAside from SSH, the pack also include support for container setups(Docker) and Windows Subsystem for Linux (WSL). </p>\n<p>To install <a href=\"https://code.visualstudio.com/docs/remote/ssh\">Remote development pack: SSH</a></p>\n<ul>\n<li>\n<p>Install an <a href=\"https://code.visualstudio.com/docs/remote/troubleshooting#_installing-a-supported-ssh-client\">OpenSSH compatible SSH client</a> if one is not already present.\nI recommend installing <a href=\"https://git-scm.com/downloads\">Git Bash</a> for windows. </p>\n<p>Note: PuTTY is not supported on Windows since the ssh command must be in the path.</p>\n</li>\n<li>Install <a href=\"https://code.visualstudio.com/insiders/\">Visual Studio Code Insiders</a>. </li>\n<li>Open <strong>Visual Studio Code Insiders</strong> then open modules</li>\n<li>Search for <a href=\"https://code.visualstudio.com/insiders/\">Remote Development</a> extension pack, then hit Install.</li>\n</ul>\n<p>From VS Code documentation</p>\n<blockquote>\n<p>  [Optional] If your server requires multi-factor authentication, set “remote.SSH.showLoginTerminal”:“true” in settings.json\nand enable the <a href=\"http://man.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man5/ssh_config.5?query=ssh%255fconfig%26arch=i386#ControlMaster\">ControlMaster</a> SSH feature. See here for details.</p>\n</blockquote>\n</li>\n</ul>\n<h2>Security</h2>\n<p>Since your code base needs to be accessed in the cloud, security is very important. Most of these setups use Secured SHell since its more secure than FTP and not to mention a lot of firewalls would have SSH open. There are also some features you might want to keep to secure SSH further. </p>\n<ul>\n<li>Never let login with root <code class=\"language-text\">(PermitRootLogin=no)</code> and create sudo-users</li>\n<li>Enable key authentication <code class=\"language-text\">(PubKeyAuthentication=yes)</code></li>\n<li>Limiting the service to a specific host and address instead of listening to all interfaces.\n<code class=\"language-text\">(ListenAddress=hostname:port)</code></li>\n<li>Create Private keys with passphrases</li>\n</ul>\n<p>There are other SSHD configuration options that can further secure your connection. Check some recommendations from <a href=\"https://www.ssh.com/ssh/\">ssh.com</a></p>\n<p>For Cloud editors like Cloud9 IDE; Enabling SSL(HTTPS), gating(strong password) and limiting access to known networks will keep your risk to a minimum. </p>\n<h2>Recommendation</h2>\n<p>I still prefer using vim for remote development but having an IDE setup like <strong>VSCode with Remote Development pack</strong> comes with great benefits which a developer like me finds quite appealing. Having to use a graphical UI for engaging my code base not to mention having some great plugins for language support is a major plus. But I digress, this is not an article to compare the benefits of IDEs in development. :) I’ll let you decide on that on your own. </p>\n<p>It really depends on what’s available for you and how comfortable you are in different environments. </p>\n<p>*Image attributed to <strong>Microsoft VS Code Documentation</strong>.*</p>","fields":{"slug":"/2019/remote-development-setups/"},"frontmatter":{"date":"May 19, 2019","title":"Remote Development Setup","featured_image":"/architecture-ssh.png","tags":["tutorial","IDE"]}}},{"node":{"excerpt":"Hosting a project wiki or a personal blog on Github is very easy with github-pages and static site generators like Jekyll.  You will end up with a site hosted on , if you’re happy with that then skip the rest of this article. If you want more or just curious about the steps then keep reading.","html":"<p>Hosting a project wiki or a personal blog on Github is very easy with github-pages and static site generators like Jekyll.  You will end up with a site hosted on <code class=\"language-text\">&lt;Project/Repository Name>.github.io</code>, if you’re happy with that then skip the rest of this article. If you want more or just curious about the steps then keep reading. <!--more--></p>\n<h2>What you’ll need</h2>\n<ul>\n<li>Domain hosting </li>\n<li>Github hosted static site (gh-pages branch)</li>\n</ul>\n<h2>Steps</h2>\n<ol>\n<li>\n<p>Setup your domain hosting</p>\n<p>As an example, I am using Godaddy’s admin panel. Your mileage might be different but most domain providers will have similar tools for you to use. </p>\n<p><img src=\"/godaddy-domain-admin_1.png\" alt=\"alt text\" title=\"Godaddy domain admin panel\"></p>\n<ol>\n<li>\n<p>Add a <strong>A</strong> entry to <strong>185.199.108.153</strong> with the following details. </p>\n<ul>\n<li>Host: @</li>\n<li>Points to: 185.199.109.153</li>\n<li>TTL: 600 seconds</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"/godaddy-domain-manager.png\" alt=\"alt text\" title=\"Godaddy domain manager\"></p>\n<ol start=\"2\">\n<li>Do the same for <strong>185.199.109.153</strong>, <strong>185.199.110.153</strong> and <strong>185.199.111.153</strong>.</li>\n<li>\n<p>Add a CNAME with the following details:</p>\n<ul>\n<li>Host: www</li>\n<li>Points to: -----.github.io</li>\n<li>TTL: 1 hour</li>\n</ul>\n</li>\n<li>Save your settings.</li>\n</ol>\n<blockquote>\n<p>Update: It seems Godaddy has upgraded their interface you need to add those entries and the settings are automatically saved for you. </p>\n</blockquote>\n</li>\n<li>\n<p><a name=\"setup-gh\">Setup Github Pages</a></p>\n<ol>\n<li>Switch to your gh-pages branch and create a text file with your domain (e.g.  www.codespud.com)Save it in the root of your static site.  </li>\n</ol>\n<p><img src=\"/godaddy-cname-file.png\" alt=\"alt text\" title=\"Github pages CNAME file\"></p>\n<ol>\n<li>Navigate to <strong>Settings > Options > GitHub Pages</strong></li>\n</ol>\n<p><img src=\"/godaddy-github-pages.png\" alt=\"alt text\" title=\"Github pages settings\"></p>\n<ol>\n<li>Point branch to <strong>gh-pages branch</strong></li>\n<li>Fill in your domain. In my case, it’s <em>www.codespud.com</em>.</li>\n<li>Enable <strong>‘Enforce HTTPS’</strong>, if the option is enabled. Sometimes it will indicate you need to wait for 24 hours. Just check again later and enable it if you’re allowed to. If you have a different issue checkout <a href=\"https://help.github.com/en/articles/troubleshooting-custom-domains\">Github article</a> on troubleshooting custom domains. </li>\n</ol>\n</li>\n</ol>\n<hr>\n<h3>NPM package</h3>\n<p>If you’re familiar with npm, you can use <a href=\"https://www.npmjs.com/package/gh-pages-cli\">gh-pages cli</a> to setup this for you. </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i <span class=\"token parameter variable\">-g</span> gh-pages</code></pre></div>\n<p>Before you can deploy to gh-pages. Remember to create the CNAME text file I mentioned earlier in step 1 of <a href=\"#setup-gh\">Setup Github Pages</a>.</p>\n<p>Point it to your static site code, e.g. (<em>dist</em> folder)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">gh-pages <span class=\"token parameter variable\">-d</span> dist </code></pre></div>\n<p>This will set up your Github pages with the content of your <em>dist</em> folder and point it to whatever domain you specified in CNAME. </p>\n<h2>Conclusion</h2>\n<p>If everything went well. You should have your Github hosted site using your shiny new custom domain. :)</p>","fields":{"slug":"/2019/how-to-use-custom-domains-to-github-pages/"},"frontmatter":{"date":"April 22, 2019","title":"How to Use Custom Domains with Github Pages","featured_image":"/godaddy-domain-admin_1.png","tags":["github","website","blogging"]}}},{"node":{"excerpt":"If you work with Linux or Unix-like operating systems like Ubuntu or the MacOS, you might be familiar with Bourne-Again Shell or BASH for short. This article will show you that with a little elbow grease, you can have your BASH prompt work for you and heck maybe have a little fun with it.","html":"<p>If you work with Linux or Unix-like operating systems like Ubuntu or the MacOS, you might be familiar with Bourne-Again Shell or <a href=\"https://www.gnu.org/software/bash/bash.html\">BASH</a> for short. This article will show you that with a little elbow grease, you can have your BASH prompt work for you and heck maybe have a little fun with it.</p>\n<!--more-->\n<p>People tell me the invention of the GUI (graphical user interface) is the best thing that ever happened to modern computing. I beg to differ. Not all work is accomplished through the GUI nor is it efficient.</p>\n<p>I find myself working on the command line for work more and more — managing my servers even my Apple computer. So I get to spend much of my time on the command line. Launching commands like a stenographer recording the latest court drama. I realized very early how powerful the command line could be.</p>\n<p>But not having a GUI does not mean you should be happy with the default command prompt. Is this familiar?<figure></p>\n<p><img src=\"/assets/2016/11/boring.png\" alt=\"boring\" width=\"512\" height=\"224\" class=\"alignnone size-full wp-image-544\" srcset=\"/assets/2016/11/boring.png 512w, /assets/2016/11/boring-300x131.png 300w\" sizes=\"(max-width: 512px) 100vw, 512px\" /> <figcaption>Boring command prompt!</figcaption></figure></p>\n<p>Using the table below we can build a BASH prompt that is not only pretty but saves us a few keystrokes as well.</p>\n<h2>BASH Special Characters Reference</h2>\n<table >\n  <tr>\n    <th>\n      Special character\n    </th>\n    \n    <th align=\"left\">\n      Description\n    </th>\n    \n    <th>\n      Special character\n    </th>\n    \n    <th align=\"left\">\n      Description\n    </th>\n  </tr>\n  \n  <tr>\n    <td align=\"center\">\n      \\a\n    </td>\n    \n    <td>\n      an ASCII bell character (07)\n    </td>\n    \n    <td align=\"center\">\n      \\d\n    </td>\n    \n    <td>\n      the date in &#8220;Weekday Month Date&#8221; format (e.g., &#8220;Tue May 26&#8221;)\n    </td>\n  </tr>\n  \n  <tr>\n    <td align=\"center\">\n      \\]\n    </td>\n    \n    <td>\n      end a sequence of non-printing characters\n    </td>\n    \n    <td align=\"center\">\n      \\e\n    </td>\n    \n    <td>\n      an ASCII escape character (033)\n    </td>\n  </tr>\n  \n  <tr>\n    <td align=\"center\">\n      \\h\n    </td>\n    \n    <td>\n      the hostname up to the first `.&#8217;\n    </td>\n    \n    <td align=\"center\">\n      \\H\n    </td>\n    \n    <td>\n      the hostname\n    </td>\n  </tr>\n  \n  <tr>\n    <td align=\"center\">\n      \\j\n    </td>\n    \n    <td>\n      the number of jobs currently managed by the shell\n    </td>\n    \n    <td align=\"center\">\n      \\l\n    </td>\n    \n    <td>\n      the basename of the shell&#8217;s terminal device name\n    </td>\n  </tr>\n  \n  <tr>\n    <td align=\"center\">\n      \\n\n    </td>\n    \n    <td>\n      newline\n    </td>\n    \n    <td align=\"center\">\n      \\r\n    </td>\n    \n    <td>\n      carriage return\n    </td>\n  </tr>\n  \n  <tr>\n    <td align=\"center\">\n      \\s\n    </td>\n    \n    <td>\n      the name of the shell, the basename of $0 (the portion following the final slash)\n    </td>\n    \n    <td align=\"center\">\n      \\t\n    </td>\n    \n    <td>\n      the current time in 24-hour HH:MM:SS format\n    </td>\n  </tr>\n  \n  <tr>\n    <td align=\"center\">\n      \\T\n    </td>\n    \n    <td>\n      the current time in 12-hour HH:MM:SS format\n    </td>\n    \n    <td align=\"center\">\n      \\@\n    </td>\n    \n    <td>\n      the current time in 12-hour am/pm format\n    </td>\n  </tr>\n  \n  <tr>\n    <td align=\"center\">\n      \\A\n    </td>\n    \n    <td>\n      the current time in 24-hour HH:MM format\n    </td>\n    \n    <td align=\"center\">\n      \\u\n    </td>\n    \n    <td>\n      the username of the current user\n    </td>\n  </tr>\n  \n  <tr>\n    <td align=\"center\">\n      \\v\n    </td>\n    \n    <td>\n      the version of bash (e.g., 2.00)\n    </td>\n    \n    <td align=\"center\">\n      \\V\n    </td>\n    \n    <td>\n      the release of bash, version + patchelvel (e.g., 2.00.0)\n    </td>\n  </tr>\n  \n  <tr>\n    <td align=\"center\">\n      \\w\n    </td>\n    \n    <td>\n      the current working directory\n    </td>\n    \n    <td align=\"center\">\n      \\W\n    </td>\n    \n    <td>\n      the basename of the current working directory\n    </td>\n  </tr>\n  \n  <tr>\n    <td align=\"center\">\n      \\!\n    </td>\n    \n    <td>\n      the history number of this command\n    </td>\n    \n    <td align=\"center\">\n      \\#\n    </td>\n    \n    <td>\n      the command number of this command\n    </td>\n  </tr>\n  \n  <tr>\n    <td align=\"center\">\n      \\$\n    </td>\n    \n    <td>\n      if the effective UID is 0, a #, otherwise a $\n    </td>\n    \n    <td align=\"center\">\n      \\nnn\n    </td>\n    \n    <td>\n      the character corresponding to the octal number nnn\n    </td>\n  </tr>\n  \n  <tr>\n    <td align=\"center\">\n      \\\\\n    </td>\n    \n    <td>\n      a backslash\n    </td>\n    \n    <td align=\"center\">\n      \\[\n    </td>\n    \n    <td>\n      begin a sequence of non-printing characters, which could be used to embed a terminal control sequence into the prompt\n    </td>\n  </tr>\n  \n  <tr>\n    <td align=\"center\">\n      \\D{format}\n    </td>\n    \n    <td colspan=\"3\">\n      the format is passed to strftime(3) and the result is inserted into the prompt string; an empty format results in a locale-specific time representation. The braces are required\n    </td>\n  </tr>\n</table>\n<h2>Change the Bash Prompt</h2>\n<p>The environment variable we want to modify is <strong>PS1</strong>.<figure></p>\n<p><img src=\"/assets/2016/11/editPS1.png\" alt=\"editps1\" width=\"376\" height=\"90\" class=\"alignnone size-full wp-image-535\" srcset=\"/assets/2016/11/editPS1.png 376w, /assets/2016/11/editPS1-300x72.png 300w\" sizes=\"(max-width: 376px) 100vw, 376px\" /> </figure></p>\n<p>Using the reference table above we can break down the current prompt as</p>\n<ul>\n<li><em>\\u</em> – the current user</li>\n<li><em>\\h</em> – the computer’s hostname</li>\n<li><em>\\w</em> – the current working directory</li>\n</ul>\n<p>Not very useful is it? Let’s change that.</p>\n<p>By modifying the PS1 variable and exporting it with the command below we can manipulate the prompt to output anything we want.<figure></p>\n<p><img src=\"/assets/2016/11/bash_prompt_smiley.png\" alt=\"bash_prompt_smiley\" width=\"476\" height=\"131\" class=\"alignnone size-full wp-image-538\" srcset=\"/assets/2016/11/bash_prompt_smiley.png 476w, /assets/2016/11/bash_prompt_smiley-300x83.png 300w\" sizes=\"(max-width: 476px) 100vw, 476px\" /> <figcaption>Add a smiley</figcaption></figure></p>\n<p>Below is my favorite bash prompt which I install for all my servers and even my workstation. I can easily see important details like the hostname – very important if you find yourself managing multiple terminal windows and you can distinguish between windows. This configuration also shows the load averages, the current date and time and the working directory. The color helps to give it contrast to the monotonous black on white default of most terminal windows.<figure></p>\n<p><img src=\"/assets/2016/11/mybashpromot_in_action.png\" alt=\"mybashpromot_in_action\" width=\"719\" height=\"370\" class=\"alignnone size-full wp-image-536\" srcset=\"/assets/2016/11/mybashpromot_in_action.png 719w, /assets/2016/11/mybashpromot_in_action-300x154.png 300w\" sizes=\"(max-width: 719px) 100vw, 719px\" /> </figure></p>\n<h2>Make it Permanent</h2>\n<p>To make your BASH prompt permanent, just edit ~/.bash_profile or ~/.bashrc or ~/.profile or run the command<figure></p>\n<img src=\"/assets/2016/11/make_bashprompt_permanent.png\" alt=\"Make your bash prompt permanent\" width=\"722\" height=\"183\" class=\"alignnone size-full wp-image-541\" srcset=\"/assets/2016/11/make_bashprompt_permanent.png 722w, /assets/2016/11/make_bashprompt_permanent-300x76.png 300w\" sizes=\"(max-width: 722px) 100vw, 722px\" />  \n</figure>\n<h2>Ideas</h2>\n<ol>\n<li>Count the files in the current directory</li>\n<li>Display in blinking colors the last line of a todo list</li>\n<li>Display CPU/Memory/Disk usage</li>\n<li>Display command to pull up a help screen</li>\n<li>Echo a smiley if the system is working in top condition</li>\n</ol>\n<p>There you have it, you can now work on the command line with a little bit more help. The key here is to be creative and think of what you want your bash prompt to have. Enjoy!</p>","fields":{"slug":"/2016/make-bash-prompt-work/"},"frontmatter":{"date":"November 14, 2016","title":"Make Your Bash Prompt Work For You","featured_image":"/assets/2016/11/mybashpromot_in_action.png","tags":["bash","console"]}}},{"node":{"excerpt":"I’ve got some leeway pushing Khrunus off the ground.  I’ve always been successful using JavaScript’s timing functions but since Khrunus would primarily be built-in in AngularJS. I have to research a way to reuse my timing snippets into proper Angular code.  To study, I built a simple angular app:","html":"<p>I’ve got some leeway pushing <a title=\"Khrunus\" href=\"https://github.com/chrisbautista/Khrunus\" target=\"_blank\">Khrunus</a> off the ground.  I’ve always been successful using JavaScript’s timing functions but since Khrunus would primarily be built-in in AngularJS. I have to research a way to reuse my timing snippets into proper Angular code.  To study, I built a simple angular app:<!--more--> </p>\n<h2>Problem</h2>\n<p>How to use AngularJS to make a time-related app, in this case, a timer for logging elapsed time?</p>\n<h2>What I need</h2>\n<p>Before I started this little venture, I need to detail the parameters of the experiment.</p>\n<p>Firstly,  I need to layout my application into two sections. The top section will show a digital clock face and a button to toggle(start or stop) the clock. The bottom section will be a table showing start and end times, as well as the total duration. To know that the application is successful, start and end times should be logged. Using those values I can compute for the duration.</p>\n<p>We have two modes; an idle state,”stopped” and an active mode,”started”. We need to consider that when coding the helper functions.</p>\n<h2>Solution</h2>\n<p>Firstly, we start with a basic AngularJS template. Please note I am assuming you have at least some experience working with HTML, Javascript, and AngularJS.</p>\n<p>I need two sections so I make two main DIVs.</p>\n<p>Next, in DIV 1,  we add another div to serve as the container for the timer digits and a button.</p>\n<p>Next in DIV #2, we format a table with a header and three columns; “Start”, “End” and “Duration(secs)” correspondingly.</p>\n<p>What we have now is not very pretty, we’re going to fix that in a bit. Create a CSS file, call it “app.css”. Let’s style everything as follows,</p>\n<p>Looking good! 🙂  Now to add the functionality we need. Let’s start with some data binding and a basic controller.</p>\n<h4>HTML</h4>\n<h3>Javascript</h3>\n<p>Awesome! For the button, we’re going to use that as a trigger to toggle between modes as well as an indicator to show the user what’s happening.</p>\n<p>Now, we can switch between modes, using the button data {{mode}} as a toggle flag. Now to the meat of the application, as a reference I’m going to use this basic clock code I use when I need digital clock displays.</p>\n<p>The hero of this application is AngularJS’s <a title=\"$timeout service\" href=\"https://docs.angularjs.org/api/ng/service/$timeout\" target=\"_blank\">$timeout service</a>. The $timeout service gives the user a wrapper for window.setTimeOut. So it still acts like setTimeOut but with the code organization and excellent exception handling that AngularJS provides. Our code should follow this format</p>\n<p>We build the clock functionality via a $timeout statement, but first let’s refactor our controller and add two functions to handle the Start and Stop modes.</p>\n<p>Now for the $timeout service,</p>\n<p>You can see that we used the timeout service to recursively call the <strong>StartTimer</strong> function. When you call <code class=\"language-text\">$timeout</code>, just as window.setTimeOut, you create a timing object that we then save to our variable ‘tmPromise’. We’ll get into more of that later just take a note of it. Since we’re really making a stopwatch and not a clock that tells the current time, let’s recode. We need the current time so we use <code class=\"language-text\">date.getTime()</code>. Adding two more variables timeStart and timeEnd. When we button is clicked, we save the time to <strong>timerStart</strong>. Every time the timeout completes and we call StartTimer, the value of <strong>$scope.timeEnd</strong> changes. We then subtract <strong>$scope.timeStart</strong> to get the current elapsed time in milliseconds. We add some normalization code and we end up with this,</p>\n<p>Now for the stopTimer function, issuing the cancel method will stop the $timeout service. Remember the variable we made earlier, ‘tmPromise’. We will use that as the parameter for our cancel call illustrated below. We then collect the start and end times and push that into the history array.</p>\n<h3>Conclusion</h3>\n<p>Yay, we just made an AngularJS timer widget. Adding a service to insert a line in our table we end up with this.</p>\n<p>This is a very simple implementation. One that did not need a unit test but if we wanted to, we can use a $timeout.flush() method. More details from the reference links below.</p>\n<p>See the app in action <a title=\"here\" href=\"http://chrisbautista.github.io/experiments/cbTimerDirective/public_html/\" target=\"_blank\"><strong>here</strong></a></p>\n<blockquote>\n<p>** UPDATE: Code sample here <a title=\"here\" href=\"http://chrisbautista.github.io/experiments/cbTimerDirective/public_html/\" target=\"_blank\"><strong>here</strong></a></p>\n</blockquote>\n<p>Download all the source <a title=\"angular js timer experiment zip file\" href=\"http://chrisbautista.github.io/experiments/cbTimer/angularjs_timer_experiment.zip\" target=\"_blank\"><strong>here</strong></a>.</p>\n<h2>References</h2>\n<ul>\n<li><a href=\"https://docs.angularjs.org/api/ng/service/$timeout\">https://docs.angularjs.org/api/ng/service/$timeout</a></li>\n<li><a href=\"https://docs.angularjs.org/api/ng/filter/date\">https://docs.angularjs.org/api/ng/filter/date</a></li>\n</ul>","fields":{"slug":"/2014/how-to-make-a-timer-stopwatch-using-angularjs/"},"frontmatter":{"date":"September 28, 2014","title":"How To Make A Timer/Stopwatch Using AngularJS","featured_image":"/assets/2014/09/angular-featured.png","tags":["frontend","angularjs","ui","javascript"]}}},{"node":{"excerpt":"I had a struck of inspiration earlier this week. I’ve always wanted to make this webapp that has been playing in my mind  for a while and I finally had some ideas to start on.  Of course, like any of my projects, the first thing I do is research. First in my list was a workflow to streamline development. It’s been a while since I modified my workflow and so I thought it was time for a change.","html":"<p>I had a struck of inspiration earlier this week. I’ve always wanted to make this webapp that has been playing in my mind  for a while and I finally had some ideas to start on.  Of course, like any of my projects, the first thing I do is research. First in my list was a workflow to streamline development. It’s been a while since I modified my workflow and so I thought it was time for a change.<!--more--></p>\n<p>Aside from the design and flow of the application, my immediate concern was where to host my apps once I’m done with the first milestone. I was researching around the interweb and a familiar link caught my eye.  Heroku was the 2nd link of my search. I investigated Heroku when I first made a Facebook application for Lowe Philippines.  I remember seeing a link to Heroku from Facebook’s “Create App” wizard. Back then I was more curious than impressed. Anyway, this time I was very curious but now I’m also very impressed with how Heroku made it easy to deploy an app. Heroku does not magically build a scaffold for you but it does guide you through steps in their “Getting started” page and heck it’s free.  </p>\n<p><strong>What you get for a free account?</strong></p>\n<ul>\n<li>One(1) Dyno</li>\n<li>10,000 rows of data (postgres)</li>\n<li>512 Mb RAM</li>\n<li>One(1) hour business-hour support</li>\n</ul>\n<p>A dyno is a processing unit coined by Heroku. Heroku help says “A dyno is a lightweight container running a single user-specified command. You can think of it as a virtualized Unix container—it can run any command available in its default environment”. It’s a lot to take in but it simply means you have one worker processing requests and things for you to serve your website and other arbitrary functions like data requests.  One seems not a lot but with how fast this requests gets done you won’t even notice, unless of course your application gets some substantial traffic.  Aside from the dyno, you get to save 10000 rows of data to Postgres and a generous 512Mb RAM allocation.  If you think your application will need more resources, you can scale up by buying more dynos.  But for a hobby app or POC, a Heroku free account will serve you nicely.</p>\n<p><strong>How to start?</strong></p>\n<p>Heroku is very easy to setup.  You can go straight to the toolbelt and the dashboard or you can go to their Getting Started page, which I recommend if you’re starting to learn or new to deploying to Heroku.</p>\n<p><strong><a href=\"https://devcenter.heroku.com/start\" title=\"start here to build your heroku app\">Getting Started</a> &#x3C;-  start here</strong></p>\n<p>Heroku supports a number of languages including PHP, NodeJS etc.  This time I was making a PHP application with some AngularJS for the frontend so I followed the PHP track. Anyway, I just did the steps and I got a functional workflow as a starting point.</p>\n<p>In summary the steps are:</p>\n<ol>\n<li>Download and Install Heroku Toolbelt for your OS.</li>\n<li>Login to Heroku</li>\n<li>Get keys</li>\n<li>Create App</li>\n<li>Deploy App with git push</li>\n</ol>\n<p><strong>Is that it?</strong></p>\n<p>You followed the steps, and you got a lean file structure to start with. You have to ,of course, be familiar with Composer and Git to optimize your project, both of which are not covered by this post. Just google them, there are a lot of well written articles and tutorials out there. I especially like the ff:</p>\n<p><a href=\"https://getcomposer.org/doc/00-intro.md\">https://getcomposer.org/doc/00-intro.md</a></p>\n<p><a href=\"https://www.atlassian.com/git/tutorial/git-basics\">https://www.atlassian.com/git/tutorial/git-basics</a></p>\n<p><strong>Final thoughts</strong></p>\n<p>The cool thing about this is everything is accessible and manageable from one console. If you’re a little queasy at the idea of working with the console,  this might not be the best thing for you. An alternative is the Heroku dashboard – just create the app and  setup a more familiar way of deployment like github.  Just provide Heroku of a repo and Heroku will monitor and automatically deploy your app when a change is uploaded.</p>\n<p>Heroku is neat and well documented. There’s a bit of a learning curve  especially if you’re starting to learn to code or is a total console-phobe. Also, if you’re app has grown popular and pulling some substantial traffic, you need to increase the dynos or your app will shutdown and refuse to process requests. Which will catch a hefty bill. Nevertheless, it does get you started with some impressive workflow and and it’s free-ish. 🙂</p>\n<p><em>Some notes:</em></p>\n<p>First time you push a project (git push heroku master) and it’s empty, it would trigger a error similar to this</p>\n<p><code class=\"language-text\">!     Push rejected, no Cedar-supported app detected</code></p>\n<p>It just means, Heroku does not know what your app is about and so it can’t build the application. Solution is just provide a common starter file like index.php or index.html. This will tell Heroku that you have a PHP or HTML project and build the necessary dependencies.  You can also fix this by providing a composer.json, setting up the dependencies you need.</p>\n<img class=\"aligncenter wp-image-318 size-full\" src=\"/assets/2014/08/Screen-Shot-2014-08-28-at-1.35.13-PM-768x449.png\" alt=\"Deploy\" width=\"846\" height=\"495\" srcset=\"/assets/2014/08/Screen-Shot-2014-08-28-at-1.35.13-PM.png 846w, /assets/2014/08/Screen-Shot-2014-08-28-at-1.35.13-PM-300x176.png 300w, /assets/2014/08/Screen-Shot-2014-08-28-at-1.35.13-PM-768x449.png 768w\" sizes=\"(max-width: 846px) 100vw, 846px\" />","fields":{"slug":"/2014/quick-and-free-way-to-set-up-your-app-using-heroku/"},"frontmatter":{"date":"April 20, 2014","title":"Quick and Free Way to Set Up Your App using Heroku","featured_image":"/assets/2014/08/features-tools-3dc022115028973bfa824eb354f1d87c.png","tags":["website","devops"]}}},{"node":{"excerpt":"When I started blogging again last September, I was delighted to get a template with built-in message polling to twitter. I played with it a bit and settled with the look you see at the right. I am not a prolific ‘twitterer’, but I love the whole concept of micropublishing.","html":"<p>When I started blogging again last September, I was delighted to get a template with built-in message polling to twitter. I played with it a bit and settled with the look you see at the right. I am not a prolific ‘twitterer’, but I love the whole concept of <a href=\"http://en.wikipedia.org/wiki/Micropublishing\">micropublishing</a>.</p>\n<!--more-->\n<p>Sometimes when I feel lazy but I want something new in potatokorner; I’d post a tweet, from quotes to funny videos, just to see the widget change(LOL). Great as it is – it’s not perfect. What the widget lacks is interactivity. One day, I started planning (with frameworks like <a href=\"http://jquery.com/\">Jquery</a> and <a href=\"http://mootools.net/\">Mootools</a> in mind), to make a custom widget that can access <a href=\"http://apiwiki.twitter.com/\">twitter API</a> with features like searching for a user’s tweets or scrolling through a <a href=\"https://twitter.com/twitter101/learning\">Trending Topic</a> . Also thought adding some nice animation and CSS styles. Luckily, I don’t have to; the nice peeps from Twitter beat me to the punch and released a widget – packing almost all the things I wanted. I experimented with this along with some feed scripts from Google a days back (<a href=\"http://potatokorner.blogspot.com/2009/10/updates-on-pepeng.html#main\">Updates on Pepeng</a>).</p>\n<h4>What is a Twitter Search Widget!?</h4>\n<p>The widget’s concept is to supply the it with a search term (or phrase), like ‘potatokorner’ and it will periodically check twitter.com for tweets with the word potatokorner – but not just tweets by yours truly – every single tweet which it appears. Unlike a regular search the widget periodically pulls messages from the site(twitter) and displays it in a marquee. Twitter.com describes it,</p>\n<blockquote>\n<p>“Displays search results in real time! Ideal for live events, broadcastings, conferences, TV Shows, or even just keeping up with the news.”</p>\n</blockquote>\n<h4>Get the widget</h4>\n<p>Making your widget is easy. Log in to twitter.com. Open the Settings page, then click <a href=\"http://twitter.com/goodies/widgets\">“You can add twitter to your site here”</a>.</p>\n<div>\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://4.bp.blogspot.com/_BBS5bkzuLXM/Stvr3MiCQ0I/AAAAAAAADK0/PAJxPF4FpjA/s1600-h/potatokorner-twitter-search-widget.PNG\"><img src=\"http://4.bp.blogspot.com/_BBS5bkzuLXM/Stvr3MiCQ0I/AAAAAAAADK0/PAJxPF4FpjA/s320/potatokorner-twitter-search-widget.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p>You are asked where you want to place your widget, click “My Website”.</p>\n<div>\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://3.bp.blogspot.com/_BBS5bkzuLXM/StvssWMQRVI/AAAAAAAADLE/0h7qv6ggYV4/s1600-h/potatokorner-twitter-search-widget-step2.PNG\"><img src=\"http://3.bp.blogspot.com/_BBS5bkzuLXM/StvssWMQRVI/AAAAAAAADLE/0h7qv6ggYV4/s320/potatokorner-twitter-search-widget-step2.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p>Then, you are presented three widgets, choose the “Search Widget”.</p>\n<div>\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://3.bp.blogspot.com/_BBS5bkzuLXM/StvsyHJVE6I/AAAAAAAADLM/tFwZeVyrcxI/s1600-h/potatokorner-twitter-search-widget-step3.PNG\"><img src=\"http://3.bp.blogspot.com/_BBS5bkzuLXM/StvsyHJVE6I/AAAAAAAADLM/tFwZeVyrcxI/s320/potatokorner-twitter-search-widget-step3.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p>Now what you have before you is the heart of the “search widget” configuration.</p>\n<div>\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://1.bp.blogspot.com/_BBS5bkzuLXM/StvtGGtbBOI/AAAAAAAADLU/aaM8noAbmZU/s1600-h/potatokorner-twitter-search-config.PNG\"><img src=\"http://1.bp.blogspot.com/_BBS5bkzuLXM/StvtGGtbBOI/AAAAAAAADLU/aaM8noAbmZU/s320/potatokorner-twitter-search-config.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p>You’ll learn when you’ve finally playing with your new widget that it’s a parsing nightmare when people add tags even if their topics are not related, especially when it’s a “trending topic”. Fortunately, Twitter.com provided quite a collection of filters to narrow down your search. You can limit tweets to a certain vicinity( near:{location}) or screen out certain words ( -{word}), you can even limit them to happy ones ( 🙂 ). See <a href=\"http://search.twitter.com/operators\">Advance operators</a> to build your strings. I won’t touch this much, but I’ll explain what I’m going to use.</p>\n<p>For our example, I want to add a twitter search widget to find tweets with the word “party”, but I only want positive or happy tweets! , thus the smiley, ” 🙂 “. The smiley is a generic one, but twitter is smart enough to find all the variations (e.g. “:D”,”=)” etc. ). Now lets test it.</p>\n<div>\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://3.bp.blogspot.com/_BBS5bkzuLXM/StvtQSnAXbI/AAAAAAAADLc/OW3As3VfJpY/s1600-h/potatokorner-twitter-search-test.PNG\"><img src=\"http://3.bp.blogspot.com/_BBS5bkzuLXM/StvtQSnAXbI/AAAAAAAADLc/OW3As3VfJpY/s320/potatokorner-twitter-search-test.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p>Great! It’s working. As you can see, there are only a few tweets shown. It gives it an air of history unfolding. If you like it to show all the tweets in history at once, we’ll move to that later. Now that our search string is tested and working. You have the option of changing the “Title” and “Caption”. Lets leave the title alone and match our search string to the Caption.</p>\n<div>\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://4.bp.blogspot.com/_BBS5bkzuLXM/StvtXiBgOxI/AAAAAAAADLk/ObOyPgSCPs0/s1600-h/potatokorner-twitter-search-config-2-1.PNG\"><img src=\"http://4.bp.blogspot.com/_BBS5bkzuLXM/StvtXiBgOxI/AAAAAAAADLk/ObOyPgSCPs0/s320/potatokorner-twitter-search-config-2-1.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p>So far so good, let’s see how we can configure tweets. Choose preferences. This tab controls how your tweets will look and behave.</p>\n<div>\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://2.bp.blogspot.com/_BBS5bkzuLXM/Stvt9WNTcpI/AAAAAAAADLs/Nk4bRBgcKTI/s1600-h/potatokorner-twitter-search-config-2.PNG\"><img src=\"http://2.bp.blogspot.com/_BBS5bkzuLXM/Stvt9WNTcpI/AAAAAAAADLs/Nk4bRBgcKTI/s320/potatokorner-twitter-search-config-2.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p>Enable “Poll New Results?”, if you want the widget to continue checking the public timeline of relevant tweets to your search. (Default: Checked)</p>\n<div>\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://3.bp.blogspot.com/_BBS5bkzuLXM/StzbFlGO71I/AAAAAAAADL0/C_W70lovF7o/s1600-h/potatokorner-twitter-search-config-3+-poll.PNG\"><img src=\"http://3.bp.blogspot.com/_BBS5bkzuLXM/StzbFlGO71I/AAAAAAAADL0/C_W70lovF7o/s320/potatokorner-twitter-search-config-3+-poll.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p>Enable “Enable Scrollbars”, if you need to be able to review the rest of the resulting tweets without waiting for it to <a href=\"http://www.blogger.com/post-edit.g?blogID=21010737&#x26;postID=6325991344956883481#twitter-loop\">loop</a>. (Default: Checked)</p>\n<div>\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://4.bp.blogspot.com/_BBS5bkzuLXM/StzbK9XmG0I/AAAAAAAADL8/mTLPB6ox8dg/s1600-h/potatokorner-twitter-search-config-3+-loop.PNG\"><img src=\"http://4.bp.blogspot.com/_BBS5bkzuLXM/StzbK9XmG0I/AAAAAAAADL8/mTLPB6ox8dg/s320/potatokorner-twitter-search-config-3+-loop.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p>Behavior has two values, its either “timed interval” or “load all tweets.” Default behavior is timed interval – tweets are shown one at a time, kind of like a news marquee. When set as timed interval, you have an option to set how much time it takes before showing more results(Interval). You can also set if you want it to repeat the results when all the tweets have been shown(Loop Results).</p>\n<div>\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://1.bp.blogspot.com/_BBS5bkzuLXM/StzeVgDk71I/AAAAAAAADMU/Ka7ak5kgIig/s1600-h/potatokorner-twitter-search-config-3+-timed.PNG\"><img src=\"http://1.bp.blogspot.com/_BBS5bkzuLXM/StzeVgDk71I/AAAAAAAADMU/Ka7ak5kgIig/s320/potatokorner-twitter-search-config-3+-timed.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p>“Load all tweets” on the other hand, set’s the widget to show all the tweets related to your search – all in one go. No fancy animation. Kind of boring to me, but someone out there might have a use for it.</p>\n<div>\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://3.bp.blogspot.com/_BBS5bkzuLXM/Stzedu-uzpI/AAAAAAAADMc/pQH-SJoS6ds/s1600-h/potatokorner-twitter-search-config-3-alltweets.PNG\"><img src=\"http://3.bp.blogspot.com/_BBS5bkzuLXM/Stzedu-uzpI/AAAAAAAADMc/pQH-SJoS6ds/s320/potatokorner-twitter-search-config-3-alltweets.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p>For our example, let’s leave it as is.</p>\n<p>For really large results, you can increase or decrease the number of tweets to show.</p>\n<div>\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://1.bp.blogspot.com/_BBS5bkzuLXM/StzlVklMMmI/AAAAAAAADMs/x4oFwD1pp8g/s1600-h/potatokorner-twitter-search-config-3+-tweets.PNG\"><img src=\"http://1.bp.blogspot.com/_BBS5bkzuLXM/StzlVklMMmI/AAAAAAAADMs/x4oFwD1pp8g/s320/potatokorner-twitter-search-config-3+-tweets.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p>Finally, you also have control over how your tweets will look like. If you only need the messages without people’s faces polluting the content area, unset “Show Avatar”.</p>\n<div>\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://3.bp.blogspot.com/_BBS5bkzuLXM/StzlcscW53I/AAAAAAAADM0/tKoKQpfPuZE/s1600-h/potatokorner-twitter-search-config-3-noavatar.PNG\"><img src=\"http://3.bp.blogspot.com/_BBS5bkzuLXM/StzlcscW53I/AAAAAAAADM0/tKoKQpfPuZE/s320/potatokorner-twitter-search-config-3-noavatar.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p>If the time the message was sent doesn’t interest you, you can remove it by unchecking “Show Timestamps”.</p>\n<div>\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://2.bp.blogspot.com/_BBS5bkzuLXM/StzlidwW-cI/AAAAAAAADM8/E9NC69-DdbA/s1600-h/potatokorner-twitter-search-config-3-notime.PNG\"><img src=\"http://2.bp.blogspot.com/_BBS5bkzuLXM/StzlidwW-cI/AAAAAAAADM8/E9NC69-DdbA/s320/potatokorner-twitter-search-config-3-notime.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p>Finally, if seeing <a href=\"http://twitter.pbworks.com/Hashtags\">hashtags</a> so many times is starting to strain your eyes, hide it by unchecking “Show hashtags”. I find helpful when my search word is a hashtag.</p>\n<div>\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://4.bp.blogspot.com/_BBS5bkzuLXM/StzlnQIgVPI/AAAAAAAADNE/rLZSZLA6-l4/s1600-h/potatokorner-twitter-search-config-3-nohashtags.PNG\"><img src=\"http://4.bp.blogspot.com/_BBS5bkzuLXM/StzlnQIgVPI/AAAAAAAADNE/rLZSZLA6-l4/s320/potatokorner-twitter-search-config-3-nohashtags.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p>Now for aesthetics, lets change colors to match my site.</p>\n<div>\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://1.bp.blogspot.com/_BBS5bkzuLXM/StzelmVUs3I/AAAAAAAADMk/80RqxBQMEzg/s1600-h/potatokorner-twitter-search-config-4.PNG\"><img src=\"http://1.bp.blogspot.com/_BBS5bkzuLXM/StzelmVUs3I/AAAAAAAADMk/80RqxBQMEzg/s320/potatokorner-twitter-search-config-4.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p>I’ll leave the dimensions as is. Unfortunately, you can not test the numbers you have set for the widget. You just have to see how it looks in your page – and decide if you need to adjust. Note you can let the widget grow into the container you want to place it, or if you’re just not sure how to adjust it to fit your site – you can try setting “auto-width”.</p>\n<div>\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://2.bp.blogspot.com/_BBS5bkzuLXM/StzlugcxuiI/AAAAAAAADNM/Qe2LsIwoGfw/s1600-h/potatokorner-twitter-search-config-5.PNG\"><img src=\"http://2.bp.blogspot.com/_BBS5bkzuLXM/StzlugcxuiI/AAAAAAAADNM/Qe2LsIwoGfw/s320/potatokorner-twitter-search-config-5.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p>I’m happy with the results, click “Finish and Grab Code” button to get the code. See our results below.</p>\n<div>\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://2.bp.blogspot.com/_BBS5bkzuLXM/Stzmzg7JsII/AAAAAAAADNU/4MuMeU_2viE/s1600-h/potatokorner-twitter-search-config-getcode.PNG\"><img src=\"http://2.bp.blogspot.com/_BBS5bkzuLXM/Stzmzg7JsII/AAAAAAAADNU/4MuMeU_2viE/s320/potatokorner-twitter-search-config-getcode.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p>Simply insert the code into your page’s html and you’re done. see results here</p>\n<p>There you have it, shown you how to get the widget. Now go play with your new toy! If you have a problem installing, just leave a comment or email me at <code class=\"language-text\">questions at codespud dot com</code>.</p>\n<h4>Some closing tips</h4>\n<ol>\n<li>If you’re using a fluid-width layout, you might find auto-width useful.  </li>\n<li>Use the minus operator(-) plus word (you want to leave out) in the search parameter to narrow your search.  </li>\n<li>If you’ll remove the scrollbar, enable “Loop results” so you’ll be able to see all the results.  </li>\n<li>I found the optimum interval for showing tweets is 5 secs, but of course it depends on what you intend to use it for.  </li>\n<li>Sometimes, you can clean your results by showing hashtags and filtering unwanted tags out with minus(-).  </li>\n<li>Enable scrollbars if you chose to load all results.</li>\n</ol>","fields":{"slug":"/2009/install-twitter-search-widget/"},"frontmatter":{"date":"October 19, 2009","title":"Install Twitter Search Widget","featured_image":"/twitter.png","tags":["widget","twitter","javascript"]}}},{"node":{"excerpt":"It started with TinyURL, URL aliasing/shortening has become big business with similar sites growing out of the woodwork(See URL Shortening – History). With other unrelated services following the trend, like scr.im(email aliasing) and twt.fm(promotes music), adding value to support our slowly growing twittering society.","html":"<p>It started with <a href=\"http://tinyurl.com/\" target=\"_blank\">TinyURL</a>, <a href=\"http://en.wikipedia.org/wiki/URL_shortening\" target=\"_blank\">URL aliasing/shortening</a> has become big business with similar sites growing out of the woodwork(See <a href=\"http://en.wikipedia.org/wiki/URL_shortening\" target=\"_blank\">URL Shortening – History</a>). With other unrelated services following the trend, like <a href=\"http://scr.im/\" target=\"_blank\">scr.im</a>(email aliasing) and <a href=\"http://twt.fm/\" target=\"_blank\">twt.fm</a>(promotes music), adding value to support our slowly growing twittering society. <!--more-->Bit.ly is one such revolutionary child; <a href=\"http://mashable.com/2009/09/08/bitly-tinyurl/\">but this child has grown big enough to even rival TinyURL</a>.</p>\n<p>What so great about bit.ly?</p>\n<p>It accomplishes it task, but with flair. I love that bit.ly provides a means for me to track how many clicked the URLs i sent. Might be the reason for it’s sudden increase in popularity for such a short period. It doesn’t hurt either that it’s officially endorsed by twitter.com.</p>\n<p>The member’s site has a number of features but I’ll concentrate on URL shortening and tracking.</p>\n<div style=\"clear: both; text-align: center;\">\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://4.bp.blogspot.com/_BBS5bkzuLXM/St_PiBvq24I/AAAAAAAADNc/zzDKghXJmQc/s1600-h/potatokorner-bit-ly.PNG\"><img src=\"http://4.bp.blogspot.com/_BBS5bkzuLXM/St_PiBvq24I/AAAAAAAADNc/zzDKghXJmQc/s320/potatokorner-bit-ly.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p>Above screenshot you see the URL entry tool in RED dashed borders. This is where you jam your uber long URL. Usually, URL shortening is more conveniently done via an API call via a tool in your client software. But if you’re just want your un-memorize-able URL to be easier to carry around or share then the web tool should suffice.</p>\n<p><a href=\"http://bit.ly/\">bit.ly, a simple url shortener</a></p>","fields":{"slug":"/2009/bit-ly-a-simple-url-shortener/"},"frontmatter":{"date":"October 17, 2009","title":"Bit.ly, A Simple URL Shortener","featured_image":"/bitly_logo.svg","tags":["utility","website"]}}},{"node":{"excerpt":"The web has become more than just a glorified paperless library, now it has become a place where everyone works, plays and meet up. This has become more true with the surge of desktop applications to their web equivalents (email, desktop publishing, spreadsheet etc.) and the advancement in web technologies(AJAX, HTML5 etc). More and more I find myself using online versions of my computer’s desktop.","html":"<p>The web has become more than just a <a href=\"http://www.ipl.org/\" target=\"_blank\">glorified paperless library</a>, now it has become a place where everyone works, plays and meet up. This has become more true with the surge of desktop applications to their web equivalents (email, desktop publishing, spreadsheet etc.) and the advancement in web technologies(AJAX, HTML5 etc). More and more I find myself using online versions of my computer’s desktop. <!--more-->Having been hosted on a remote server I enjoy; savings in storage space, automatic backups, safety from physical hardware damage(like for some of my friends affected by Typhoon Ondoy) and ready support(depends on the service provider). Though you do need to constantly have a decent internet connection, for me it works just fine. If you’re interested, read on!.</p>\n<h3>What you need?</h3>\n<p>You need to install <a href=\"http://www.google.com/chrome\" target=\"_blank\">Google’s Chrome</a> browser. No specific channel. Though I recommend using <a href=\"http://dev.chromium.org/getting-involved/dev-channel\" target=\"_blank\">“Dev”</a>, for plugin support and cutting edge stuff. Secondly a list of online services that emulates software you normally would install like Gmail/YahooMail(Email), Grooveshark(Music Player) etc. Also, depending on the web application, you might need to register for accounts to use their services.</p>\n<h3>How?</h3>\n<p>The secret of this system is Chrome’s <a href=\"http://www.google.com/support/chrome/bin/answer.py?hl=en&answer=95710\" target=\"_blank\">create application shortcuts</a>. It’s a menu item inside the page menu, shown below.</p>\n<div style=\"clear: both; text-align: center;\">\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://3.bp.blogspot.com/_BBS5bkzuLXM/StH9Kkvps7I/AAAAAAAADJ8/bms9XUcHG5I/s1600-h/potatokorner-build-workstation-using-chrome-gmail-step1.PNG\" target=\"_blank\"><img src=\"http://3.bp.blogspot.com/_BBS5bkzuLXM/StH9Kkvps7I/AAAAAAAADJ8/bms9XUcHG5I/s400/potatokorner-build-workstation-using-chrome-gmail-step1.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p>Why use this you say, when you can simply bookmark the sites URL. Firstly, making webapps as application shortcuts makes them readily accessible; without the extra steps of opening a browser and finding the bookmark. Also, to get the illusion of a desktop app, we need the chrome(extra browser sections like the menu bar, status bar etc) to disappear(See below) leaving only the application in its intended glory.</p>\n<div style=\"clear: both; text-align: center;\">\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://4.bp.blogspot.com/_BBS5bkzuLXM/StJoSaWGMfI/AAAAAAAADKc/GqIOV1K0_64/s1600-h/potatokorner-chromeless-window.PNG\" target=\"_blank\"><img src=\"http://4.bp.blogspot.com/_BBS5bkzuLXM/StJoSaWGMfI/AAAAAAAADKc/GqIOV1K0_64/s400/potatokorner-chromeless-window.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p>What is more awesome is whatever favicon image the site has, is saved with the shortcut as an icon.</p>\n<div style=\"clear: both; text-align: center;\">\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://3.bp.blogspot.com/_BBS5bkzuLXM/StLytRz5lOI/AAAAAAAADKk/F4DfqmZNzPk/s1600-h/potatokorner-shortcuticons.PNG\" target=\"_blank\"><img src=\"http://3.bp.blogspot.com/_BBS5bkzuLXM/StLytRz5lOI/AAAAAAAADKk/F4DfqmZNzPk/s400/potatokorner-shortcuticons.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p><em>Note: This system can work for other browsers. I just used Chrome since most of what I need are Google Apps. So if you know how to do this in Firefox or IE then go ahead.</em><br>\nLet’s get started. Say we need an email client. You have either a choice between a <a href=\"http://en.wikipedia.org/wiki/Webmail\" target=\"_blank\">webmail client</a>, like Gmail and Yahoo Mail, or a <a href=\"http://en.wikipedia.org/wiki/Post_Office_Protocol\" target=\"_blank\">POP</a>/<a href=\"http://en.wikipedia.org/wiki/IMAP\" target=\"_blank\">IMAP</a> client like Squirrel or Horde installation. Let’s go with Gmail. You log in to Gmail – find a comfortable page like the inbox or the login page. Normally for security purposes I’d go with the login page, but since I’m the only one using this workstation lets make it easy for me and pick the Inbox as our starting page.</p>\n<p>Now a popup should appear asking where you want to place your shortcut. It can be on the Desktop, the start menu, or a shortcut on the Quicklaunch bar. This is just a matter of preference. I prefer the Quicklaunch bar to maintain the minimalist feel of this system.</p>\n<div style=\"clear: both; text-align: center;\">\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://1.bp.blogspot.com/_BBS5bkzuLXM/StH9X1KKHVI/AAAAAAAADKE/vX_2bLjktWg/s1600-h/potatokorner-build-workstation-using-chrome-gmail-step2.PNG\" target=\"_blank\"><img src=\"http://1.bp.blogspot.com/_BBS5bkzuLXM/StH9X1KKHVI/AAAAAAAADKE/vX_2bLjktWg/s400/potatokorner-build-workstation-using-chrome-gmail-step2.PNG\" alt=\"\" width=\"400\" height=\"289\" border=\"0\"></a>\n</div>\n<p>Voila! you now have an email client on steroids. Well, almost. You can configure Gmail some more to personalize it. I’ll cover this part in a future post. Repeat this for other applications, each time finding the “comfortable” starting page when you create the shortcuts. Fortunately for you I’ve listed a number of them below to get you started.<br>\nUpdate 2010/08/21: If you don’t like Chrome. Mozilla’s Prism accomplishes the same thing.</p>\n<p>Download from <a href=\"http://prism.mozillalabs.com/\">here</a>.</p>\n<div style=\"clear: both; text-align: center;\">\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://4.bp.blogspot.com/_BBS5bkzuLXM/StIAUDMLqzI/AAAAAAAADKM/ynVMoh_LERA/s1600-h/potatokorner-build-workstation-using-chrome-gmail-step3.PNG\" target=\"_blank\"><img src=\"http://4.bp.blogspot.com/_BBS5bkzuLXM/StIAUDMLqzI/AAAAAAAADKM/ynVMoh_LERA/s400/potatokorner-build-workstation-using-chrome-gmail-step3.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<p> </p>\n<h3>Applications</h3>\n<h5>Office Alternative(Word, Excel, PowerPoint etc.)</h5>\n<ul>\n<li><a href=\"http://docs.google.com/\" target=\"_blank\">Google Docs</a></li>\n<li><a href=\"http://www.thinkfree.com/\" target=\"_blank\">Thinkfree.com/</a></li>\n<li><a href=\"http://www.zoho.com/\" target=\"_blank\">Zoho</a></li>\n<li><a href=\"http://www.peepel.com/\" target=\"_blank\">Peepel</a></li>\n<li><a href=\"http://www.adobe.com/acom/buzzword/\" target=\"_blank\">Buzz Word</a></li>\n<li><a href=\"http://etherpad.com/\" target=\"_blank\">Etherpad</a></li>\n<li><a href=\"http://opengoo.org/\" target=\"_blank\">OpenGoo</a></li>\n</ul>\n<h5>Email</h5>\n<ul>\n<li><a href=\"https://mail.google.com/\" target=\"_blank\">Gmail</a></li>\n<li><a href=\"http://www.fastmail.fm/\" target=\"_blank\">Fastmail</a></li>\n<li><a href=\"http://www.runbox.com/\" target=\"_blank\">Runbox</a></li>\n<li><a href=\"https://www.inbox.com/login.aspx?gdi=true\" target=\"_blank\">Inbox.com</a></li>\n</ul>\n<h5>Calendar and Tasks</h5>\n<ul>\n<li><a href=\"https://www.google.com/calendar/render?tab=mc\" target=\"_blank\">Google Calendar</a></li>\n<li><a href=\"http://30boxes.com/\" target=\"_blank\">30boxes</a></li>\n</ul>\n<p> </p>\n<div style=\"clear: both; text-align: center;\">\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://1.bp.blogspot.com/_BBS5bkzuLXM/StIA2TK7ZmI/AAAAAAAADKU/LHeRsPt_Fxs/s1600-h/potatokorner-30boxes.PNG\" target=\"_blank\"><img src=\"http://1.bp.blogspot.com/_BBS5bkzuLXM/StIA2TK7ZmI/AAAAAAAADKU/LHeRsPt_Fxs/s400/potatokorner-30boxes.PNG\" alt=\"\" border=\"0\"></a>\n</div>\n<h5>Music Player/Online Radio</h5>\n<ul>\n<li><a href=\"http://listen.grooveshark.com/\" target=\"_blank\">Grooveshark</a></li>\n<li><a href=\"http://spotify.com/\" target=\"_blank\">Spotify.com</a></li>\n<li><a href=\"http://www.pandora.com/\" target=\"_blank\">Pandora Radio</a></li>\n<li><a href=\"http://www.last.fm/\" target=\"_blank\">Last.FM</a></li>\n<li><a href=\"http://www.jamendo.com/en/\" target=\"_blank\">Jamendo.com</a></li>\n</ul>\n<h5>Picture Organizer</h5>\n<ul>\n<li><a href=\"http://picasaweb.google.com/home\" target=\"_blank\">Picasa Web Albums</a></li>\n<li><a href=\"http://www.flickr.com/\" target=\"_blank\">Flickr</a></li>\n<li><a href=\"http://www.fotonomy.com/\" target=\"_blank\">Fotomy</a></li>\n<li><a href=\"http://www.smugmug.com/\" target=\"_blank\">SmugMug</a></li>\n</ul>\n<h5>Instant Messaging</h5>\n<ul>\n<li><a href=\"http://meebo.com/home\" target=\"_blank\">Meebo</a></li>\n</ul>\n<p>If you know other similar applications or more web alternatives to desktop applications, please don’t hesitate to mention in it in your comments.</p>\n<h3>Read some more</h3>\n<p><a href=\"http://www.google.com/support/chrome/\" target=\"_blank\">http://www.google.com/support/chrome/</a><br>\n<a href=\"http://www.makeuseof.com/tag/5-great-alternatives-to-google-docs-you-should-consider/\" target=\"_blank\">http://www.makeuseof.com/tag/5-great-alternatives-to-google-docs-you-should-consider/</a><br>\n<a href=\"http://alternativeto.net/\" target=\"_blank\">http://alternativeto.net</a><br>\n<a href=\"http://brontesaurus.com/blog/2008/12/3-webmail-alternatives/\" target=\"_blank\">http://brontesaurus.com/blog/2008/12/3-webmail-alternatives/</a></p>","fields":{"slug":"/2009/all-you-need-is-a-browser/"},"frontmatter":{"date":"October 12, 2009","title":"All You Need Is A Browser","featured_image":"/gmail_logo.png","tags":["browser","webapps","tip"]}}}]}},"pageContext":{"limit":12,"skip":0,"numPages":3,"currentPage":1}},"staticQueryHashes":["2139210123","63159454"]}