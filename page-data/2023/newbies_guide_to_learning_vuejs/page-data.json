{"componentChunkName":"component---src-templates-blog-post-js","path":"/2023/newbies_guide_to_learning_vuejs/","result":{"data":{"site":{"siteMetadata":{"title":"CodeSpud","author":"@codespud"}},"markdownRemark":{"id":"39ccb6ac-6844-54d5-b74f-942ac6757ded","excerpt":"Part of my new year resolution for 2023 is to learn at least 3 new front-end frameworks. One of these frameworks I intend to dive deeper into is Vue.js. Every time I want to learn something I try to plan first. It‚Äôs the worst thing to do is to try to run around like a headless chicken.","html":"<p>Part of my <a href=\"/2022/programmers_resolution_2023/\">new year resolution for 2023</a> is to learn at least 3 new front-end frameworks. One of these frameworks I intend to dive deeper into is Vue.js. Every time I want to learn something I try to plan first. It‚Äôs the worst thing to do is to try to run around like a headless chicken. <!--more--> Learning without a plan is just a glorified waste of time.  So for Vue.js, I went to their site and also googled some resources online. I planned to scan all the topics that I needed to grasp first. Enough so that I can start practicing what I‚Äôve learned in a Vue.js project. </p>\n<p>After reading around, most of it was from the great documentation on Vue.js website, I outlined the minimum concepts I need to start learning Vue.js. I‚Äôve outlined it in this post. If you‚Äôre like me, one that is practically new to Vue.js, or worked on Vue.js before but interested in a refresher, or are just interested in reading on the topic. Feel free to read on.</p>\n<h2>Vue.js learning plan</h2>\n<p>If you‚Äôve gone to <a href=\"https://vuejs.org/guide/introduction.html\">Vue.js‚Äô documentation page</a>, You will find an outline of things you should learn as a prospective Vue.js programmer. I read through Vue.js‚Äô documentation page and it was good - especially the Essentials section. </p>\n<p>To be honest I got lost early because of some topics like the difference between Options API and Composition API. If you don‚Äôt know what that is, then you were me at the beginning too. <a href=\"https://vuejs.org/guide/introduction.html#api-styles\">Vue.js documentation on API Preference</a> should explain the difference between API styles.</p>\n<p>Anyhow, there is just so much stuff to learn. For some people, this would be enough and you are free to do so. Based on the same documentation I made an outline of the topics I wanted to learn first. Also, I restricted my practice to using the <a href=\"https://vuejs.org/guide/introduction.html#options-api\">Options API</a>.</p>\n<ol>\n<li><a href=\"/2023/newbies_guide_to_learning_vuejs/#create\">How to create a Vue application</a></li>\n<li><a href=\"/2023/newbies_guide_to_learning_vuejs/#templates\">Working with Templates</a> </li>\n<li><a href=\"/2023/newbies_guide_to_learning_vuejs/#directives\">Vue.js Directives</a> </li>\n<li><a href=\"/2023/newbies_guide_to_learning_vuejs/#data\">Data handling and methods</a></li>\n<li><a href=\"/2023/newbies_guide_to_learning_vuejs/#computed\">Computed properties</a></li>\n<li><a href=\"/2023/newbies_guide_to_learning_vuejs/#event-handling\">Handling events</a></li>\n</ol>\n<!--ad-->\n<h3 id=\"create\">1. How to create a Vue Application</h3>\n<p>To start off, the first thing any developer wants to learn is how to make a simple application. Like most front-end frameworks nowadays, there are two ways to start creating an application. The first option is hosting an HTML page with the library CDN loaded and one is to build an application using build setup. Choose whichever way you want to start with. What‚Äôs important is you get started early to practice.</p>\n<p><strong>HTML page loading Vue CDN</strong></p>\n<ul>\n<li><a href=\"https://vuejs.org/guide/quick-start.html#using-vue-from-cdn\">Vuejs.org: Using a CDN</a></li>\n<li><a href=\"https://vueschool.io/lessons/getting-started-with-vuejs\">Vue School: Getting started with VueJS</a></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/vue@3/dist/vue.global.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><strong>Build setup with NodeJS</strong></p>\n<ul>\n<li><a href=\"https://vuejs.org/guide/quick-start.html#creating-a-vue-application\">Vuejs.org: Using NodeJS Setup</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started#installation\">MDN: Vue.js - Installation</a></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> <span class=\"token function\">npm</span> init vue@latest</code></pre></div>\n<h3 id=\"templates\">2. Working with Templates</h3>\n<p>Vue.js has templates to define the structure of a simple application. Templates are written in HTML(or HTML-like syntax) and can include special library-specific directives and expressions to render data. </p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>Message: {{ msg }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>{{ rawHtml }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li><a href=\"https://vuejs.org/guide/essentials/template-syntax.html\">Vuejs.org: Template Syntax</a></li>\n<li><a href=\"https://vueschool.io/lessons/vuejs-template-syntax-and-expressions\">Vue School: Vue.js Template Syntax and Expressions</a></li>\n</ul>\n<h3 id=\"directives\">3. Vue.js Directives</h3>\n<p>While working with templates, you will soon encounter directives. You will see directives as element attributes specific to Vue.js. They are prefixed with <code class=\"language-text\">v-</code> syntax like the example below.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item in items<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  {{ item.text }}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li><a href=\"https://vuejs.org/api/built-in-directives.html\">VueJS.org: Directives</a></li>\n<li><a href=\"https://www.codecademy.com/courses/learn-vue-js/lessons/vue-introduction/exercises/directives\">CodeAcademy: Directives üíµ</a></li>\n<li><a href=\"https://vuejsdevelopers.com/lessons/understanding-directives-1/1/\">Vuejsdevelopers.com: Understanding Directives</a></li>\n</ul>\n<!--ad-->\n<h3 id=\"data\">4. Data handling and methods</h3>\n<p>Vue.js components have a data object that holds the component‚Äôs state, and methods that can be used to manipulate the state. In my opinion, the ability to manage and manipulate data is what makes front-end frameworks interesting. It‚Äôs the difference between a simple HTML page and a dynamic site. </p>\n<ul>\n<li><a href=\"https://vuejs.org/api/options-state.html#data\">VueJS.org: Data</a></li>\n<li><a href=\"https://vueschool.io/lessons/vue-methods\">Vue School: Fundamentals - Vue methods</a></li>\n</ul>\n<h3>State management</h3>\n<p>Understanding Vue.js data and methods, you will soon arrive at the concept of state management. You can use the data object and other techniques to manage the state of the application. But there are also state management libraries you can use. Vue.js‚Äô answer to flux pattern libraries of React.js.</p>\n<ul>\n<li><a href=\"https://pinia.vuejs.org/introduction.html\">Pinia</a></li>\n<li><a href=\"https://vuex.vuejs.org/\">Vuex</a></li>\n</ul>\n<p>Vue.js recommends using <strong>Pinia</strong>. </p>\n<h3 id=\"computed\">5. Computed Properties</h3>\n<p>Vue.js has the concept of computed properties. Computed properties are calculated based on other data or properties on a page. The contrived example below illustrates what computed properties are used for. The values are automatically ‚Äúcalculated‚Äù from the source property. When the source property changes the computed value also changes without additional code. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">store</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">fruits</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">'mango'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">//...</span>\n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">computed</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">hasMangoToSell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>store<span class=\"token punctuation\">.</span>fruits<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mango'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token string\">'Yes'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'No'</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">//...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dl</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dt</span><span class=\"token punctuation\">></span></span>Has mango to sell?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dt</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dd</span><span class=\"token punctuation\">></span></span>{{ hasMangoToSell }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dd</span><span class=\"token punctuation\">></span></span>\n  ...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dl</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>The <code class=\"language-text\">hasMangoToSell</code> computed property above is ‚Äúcomputed‚Äù from the data object property <code class=\"language-text\">store</code>. </p>\n<!--ad-->\n<ul>\n<li><a href=\"https://vuejs.org/guide/essentials/computed.html\">VueJs.org: Computed properties</a></li>\n<li><a href=\"https://vueschool.io/lessons/vuejs-computed-properties\">Vue School: Computed properties</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">MDN: Using Vue computed properties</a></li>\n</ul>\n<h3 id=\"event-handling\">6. Handling events</h3>\n<p>Event handling is the essence of front-end interactivity. Vue.js allows you to handle events, such as button clicks, form inputs, and more. These events could either be inline or method handlers. </p>\n<p>Inline handlers executed code is defined inside a <code class=\"language-text\">@&lt;event name here>=\"\"</code> attribute. Like so: </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>counter++<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Increment<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>There are {{ counter }} sheep jumping over the fence<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Method handlers on the other hand are defined from the application object itself under the <code class=\"language-text\">methods</code> prop. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">counter</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>counter<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>increment<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Increment<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>There are {{ counter }} sheep jumping over the fence<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li><a href=\"https://vuejs.org/guide/essentials/event-handling.html\">VueJS.org: Event Handling</a></li>\n<li><a href=\"https://vuejs.org/guide/essentials/forms.html\">VueJS.org: Form Input Bindings</a></li>\n<li><a href=\"https://vueschool.io/lessons/vuejs-user-events\">Vue School: User events</a></li>\n</ul>\n<p>There are other concepts a Vue.js developer needs to learn of course. I think you will encounter those topics while running through this list. Topics like components, watchers, and hooks. </p>\n<h2>Wrapping up</h2>\n<p>After the list above I plan to explore more advanced topics and start building a project. It is important to practice by building small projects, experimenting with different features, and following tutorials. </p>\n<h2>My progress so far</h2>\n<ol>\n<li><s>Learn Vue.js essential concepts</s></li>\n<li>Debugging a VueJS application</li>\n<li>Create a blog application using Vue.js</li>\n<li>Learn Vue-Router</li>\n<li>Build for Production</li>\n</ol>","fields":{"slug":"/2023/newbies_guide_to_learning_vuejs/"},"frontmatter":{"title":"A Beginner's Guide to Learning Vue.js","date":"January 14, 2023","tags":["vue","frontend","web-development"],"featured_image":"/blog/viewfinder-unsplash.jpg","featured_image_attribution":"photo by <a href=\"https://unsplash.com/@helloimnik\">Hello I'm Nik</a>","contentType":null}}},"pageContext":{"slug":"/2023/newbies_guide_to_learning_vuejs/","tags":["vue","frontend","web-development"],"previous":{"fields":{"slug":"/2023/fix_accessibility_with_focus_within/"},"frontmatter":{"title":"Fix accessibility using focus-within","contentType":null,"tags":["accessibility","css","frontend"]}},"next":null}},"staticQueryHashes":["2139210123","63159454"]}