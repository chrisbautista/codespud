{"version":3,"sources":["webpack:///./src/templates/works-list.js"],"names":["FeaturedImage","styled","img","Figure","figure","StyledLink","Link","H2","h2","Cards","div","Card","Description","p","Title","h1","AnimatedCard","node","post","title","frontmatter","fields","slug","to","featured_image","src","alt","dangerouslySetInnerHTML","__html","description","excerpt","WorksIndex","render","data","this","props","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","location","keywords","map","key","Component"],"mappings":"0LAQMA,EAAgBC,IAAOC,IAAG,+EAAVD,CAAU,mDAK1BE,EAASF,IAAOG,OAAM,wEAAbH,CAAa,iDAMtBI,EAAaJ,YAAOK,QAAK,4EAAZL,CAAY,8FAWzBM,EAAKN,IAAOO,GAAE,oEAATP,CAAS,uCAKdQ,EAAQR,IAAOS,IAAG,uEAAVT,CAAU,2MAclBU,EAAOV,IAAOS,IAAG,sEAAVT,CAAU,0VA6BjBW,EAAcX,IAAOY,EAAC,6EAARZ,CAAQ,sBAItBa,EAAQb,IAAOc,GAAE,uEAATd,CAAS,yRAoBjBe,EAAe,SAAH,GAAkB,IAC5BC,EADoB,EAAJC,KAEhBC,EAAQF,EAAKG,YAAYD,OAASF,EAAKI,OAAOC,KAEpD,QAAKL,GAGH,kBAACN,EAAI,KACH,kBAACN,EAAU,CAACkB,GAAE,GAAKN,EAAKI,OAAOC,MAC7B,kBAACf,EAAE,KAAEY,GAEJF,EAAKG,YAAYI,gBAChB,kBAACrB,EAAM,KACL,kBAACH,EAAa,CAACyB,IAAKR,EAAKG,YAAYI,eAAgBE,IAAKP,KAG9D,kBAACP,EAAW,CACVe,wBAAyB,CACvBC,OAAQX,EAAKG,YAAYS,aAAeZ,EAAKa,cAQnDC,EAAU,8DAiBb,OAjBa,6BACdC,OAAA,WACE,IAAQC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAanB,MACnCoB,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,kBAAC,IAAM,CAACC,SAAUR,KAAKC,MAAMO,SAAUvB,MAAOiB,GAC5C,kBAAC,IAAG,CAACjB,MAAM,YAAYwB,SAAU,CAAC,QAAD,eACjC,kBAAC7B,EAAK,KAAE,aACR,kBAACL,EAAK,KACH8B,EAAMK,KAAI,gBAAG3B,EAAI,EAAJA,KAAI,OAChB,kBAACD,EAAY,CAAC6B,IAAK5B,EAAKG,YAAYD,MAAOD,KAAMD,UAK1D,EAjBa,CAAS6B,aAoBVf","file":"component---src-templates-works-list-js-e6004244f36d0abd7c40.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nimport styled from \"styled-components\"\r\n\r\nconst FeaturedImage = styled.img`\r\n  max-width: 100%;\r\n  margin: 0 auto 0;\r\n  display: block;\r\n`\r\nconst Figure = styled.figure`\r\n  overflow: hidden;\r\n  height: 150px;\r\n  margin: 2rem 0;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  box-shadow: none;\r\n  color: #000;\r\n  text-decoration: none;\r\n\r\n  :hover {\r\n    text-decoration: none;\r\n    color: #000;\r\n  }\r\n`\r\n\r\nconst H2 = styled.h2`\r\n  font-size: 1.1em;\r\n  margin-top: 0.3em;\r\n`\r\n\r\nconst Cards = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  grid-gap: 1rem;\r\n  grid-auto-flow: dense;\r\n  max-width: 1600px;\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: 659px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n`\r\n\r\nconst Card = styled.div`\r\n  font-size: 0.875rem;\r\n  box-shadow: 0 5px 22px 0 rgba(0, 0, 0, 0.1);\r\n  border-radius: 4px;\r\n  padding: 2rem 1.7em;\r\n  background-color: #fff;\r\n  width: 100%;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n\r\n  &:hover {\r\n    box-shadow: 0 -5px 22px 0 rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  @media (max-width: 659px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 0 1rem;\r\n  }\r\n\r\n  & > a > p {\r\n    font-weight: normal;\r\n  }\r\n\r\n  h3 {\r\n    font-weight: 600;\r\n  }\r\n`\r\n\r\nconst Description = styled.p`\r\n  text-align: left;\r\n`\r\n\r\nconst Title = styled.h1`\r\nfont-weight: bold;\r\nmargin-left: auto;\r\nmargin-right: auto;\r\nfont-weight: bold;\r\nfont-size: 5rem;\r\ntext-align: left;\r\nmargin-top: 2rem;\r\nmargin-bottom: 2rem;\r\nborder-bottom: 2px solid #ddd;\r\npadding-bottom: 2rem;\r\n\r\nmax-width: 1600px;\r\n\r\n  @media screen and (max-width: 720px) {\r\n    font-size: 3.5rem;\r\n    padding-bottom: 1rem;\r\n  }\r\n`\r\n\r\nconst AnimatedCard = ({ post }) => {\r\n  const node = post\r\n  const title = node.frontmatter.title || node.fields.slug\r\n\r\n  if (!node) return false\r\n\r\n  return (\r\n    <Card>\r\n      <StyledLink to={`${node.fields.slug}`}>\r\n        <H2>{title}</H2>\r\n\r\n        {node.frontmatter.featured_image && (\r\n          <Figure>\r\n            <FeaturedImage src={node.frontmatter.featured_image} alt={title} />\r\n          </Figure>\r\n        )}\r\n        <Description\r\n          dangerouslySetInnerHTML={{\r\n            __html: node.frontmatter.description || node.excerpt,\r\n          }}\r\n        />\r\n      </StyledLink>\r\n    </Card>\r\n  )\r\n}\r\n\r\nclass WorksIndex extends Component {\r\n  render() {\r\n    const { data } = this.props\r\n    const siteTitle = data.site.siteMetadata.title\r\n    const posts = data.allMarkdownRemark.edges\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO title=\"Portfolio\" keywords={[`works`, `portfolio`]} />\r\n        <Title>{\"Portfolio\"}</Title>\r\n        <Cards>\r\n          {posts.map(({ node }) => (\r\n            <AnimatedCard key={node.frontmatter.title} post={node} />\r\n          ))}\r\n        </Cards>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WorksIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      filter: {\r\n        frontmatter: { draft: { ne: true }, contentType: { in: [\"works\"] } }\r\n      }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            featured_image\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}