{"data":{"site":{"siteMetadata":{"title":"CodeSpud","author":"@codespud"}},"markdownRemark":{"id":"7c958128-71d7-56b8-bf56-53d8c8bc7da8","excerpt":"Happy New Year! As promised I made a rudimentary Linux shell script utilizing the tar and gzip commands to archive or make backups. If you…","html":"<div style=\"clear: both; text-align: center;\">\n  <a style=\"margin-left: 1em; margin-right: 1em;\" href=\"http://2.bp.blogspot.com/_BBS5bkzuLXM/SrIVgPdlW3I/AAAAAAAACfM/Ni40JEFfA-I/s1600-h/linux-logo.jpg\"><img src=\"http://2.bp.blogspot.com/_BBS5bkzuLXM/SrIVgPdlW3I/AAAAAAAACfM/Ni40JEFfA-I/s320/linux-logo.jpg\" border=\"0\"></a>\n</div>\n<p>Happy New Year!</p>\n<p>As promised I made a rudimentary Linux shell script utilizing the tar and gzip commands to archive or make backups. If you’re new to shell scripting you might like to read this articles.</p>\n<p><a href=\"http://www.dartmouth.edu/~rc/classes/ksh/print_pages.shtml\">http://www.dartmouth.edu/~rc/classes/ksh/print_pages.shtml</a><br>\n<a href=\"http://tldp.org/LDP/abs/html/\">http://tldp.org/LDP/abs/html/</a></p>\n<p>If you’re lazy like I am. Don’t worry I’ll explain parts of the code.</p>\n<p><a name=\"more\"></a></p>\n<p>Our goal is to make a shell script to create backups (in tar-gzip versions) of the folders we want unto a safe location on a disk. We want to be able to list all the folders and have the script loop through them. Now that’s settled, we can proceed to the code.<!--more--></p>\n<p>First, don’t forget to tell linux what scripting interpreter to use. I usually use <span style=\"font-style: italic;\">sh</span> but there are others like <span style=\"font-style: italic;\">bash and ksh</span>. But many experts suggest to use sh for portability to older systems.</p>\n<p>`<br /></p>\n<h1>!/bin/sh<br /></h1>\n<p>` </p>\n<p>Next, we configure the script. The lines below enumerates the folders I want archived ,then stores them in a SHELL VARIABLE named FOLDERS. (duhh!..)</p>\n<div style=\"background-color: darkgrey; color: white; font-size: 8pt; padding: 3px;\">\n  # &#8212; LIST OF FILES/FOLDERS TO BACKUP<br /> FOLDERS=&#8221;/var/www/html /opt/sandbox&#8221;\n</div>\n<p>This line saves the folder path I want the archives to be stored in.</p>\n<div style=\"background-color: darkgrey; color: white; font-size: 8pt; padding: 3px;\">\n  # &#8212; BACKUP HERE<br /> BACKUPFOLDER=&#8221;/opt/backup&#8221;\n</div>\n<p><em>REMINDER</em><br>\nMake sure that the backup folder exist. If it doesn’t run the lines below on the console.</p>\n<div style=\"background-color: green; color: white; font-size: 8pt; padding: 3px;\">\n  > mkdir /opt/backup<br /> > chown root:root /opt/backup<br /> > chmod 755 /opt/backup\n</div>\n<p>Here I configure the command string I want to use. Regarding the details of the command I used – see this <a href=\"http://potatokorner.blogspot.com/2008/12/linux-snippet-backup-using-tar-and-gzip.html\">[link]</a>.</p>\n<div style=\"background-color: darkgrey; color: white; font-size: 8pt; padding: 3px;\">\n  # &#8212; ARCHIVE COMMAND<br /> COMPRESSCMD=&#8221;tar czfv &#8220;\n</div>\n<p>Here we use the <span style=\"font-style: italic;\">for</span> command to loop through all the items we listed in <span style=\"font-style: italic;\">$FOLDERS</span> and store it in another variable, <span style=\"font-style: italic;\">$itm</span>.</p>\n<div style=\"background-color: darkgrey; color: white; font-size: 8pt; padding: 3px;\">\n  ## loop thru folders<br /> for itm in $FOLDERS; do<br /> # commands here<br /> &#8230;.<br /> done\n</div>\n<p>These lines configures the commands we’re going to use inside the loop. The first line generates a formatted file path for my archive, $FARCHIVE.</p>\n<div style=\"background-color: darkgrey; color: white; font-size: 8pt; padding: 3px;\">\n  FARCHIVE=$BACKUPFOLDER/`basename $itm`_`uname -n`_`date +%F`.tgz<br /> $COMPRESSCMD $FARCHIVE $itm\n</div>\n<p>If you’ve noticed I used the tilde symbol(`). Yes they are not single quotation marks. In linux console, any commands enclosed within tildes are ran first and the result is returned as a string. So for example <span style=\"font-style: italic;\">$itm</span> is equal to <span style=\"font-style: italic;\">/var/www/html</span>. The resulting FARCHIVE value will be:</p>\n<div style=\"background-color: green; color: white; font-size: 8pt; padding: 3px;\">\n  > echo $FARCHIVE<br /> /opt/backup/html_potato_2009-01-02.tgz\n</div>\n<p>The second line uses $FARCHIVE as well as the command we configured earlier and runs it.</p>\n<p>For a breakdown of the enclosed commands we used.</p>\n<p>echo the last(base) name in a path string.</p>\n<div style=\"background-color: green; color: white; font-size: 8pt; padding: 3px;\">\n  > basename /var/www/html<br /> html\n</div>\n<p>echo the system’s computer name.</p>\n<div style=\"background-color: green; color: white; font-size: 8pt; padding: 3px;\">\n  > uname -n<br /> potato\n</div>\n<p>echo the current date in this format (YYYY-MM-DD)</p>\n<div style=\"background-color: green; color: white; font-size: 8pt; padding: 3px;\">\n  > date +%F<br /> 2009-01-02\n</div>\n<p>Here is the full script.</p>\n<div style=\"background-color: black; color: white; font-size: 8pt; padding: 3px;\">\n  <p>\n    #!/bin/sh<br /> #set -x<br /> #&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;<br /> # ID: cabBackup.sh &#8211; BACKUP items to folder<br /> # USAGE: ./cabBackup.sh<br /> #&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;<br /> # AUTHOR: codespud 2008-2009<br /> # VERSION: 0.01\n  </p>\n  \n  <p>\n    # TODO: arguments<br /> # TODO: config file<br /> # TODO: functions<br /> # TODO: filtering\n  </p>\n  \n  <p>\n    # Sources<br /> # http://www.hsrl.rutgers.edu/ug/shell_help.html\n  </p>\n  \n  <p>\n    # PATH<br /> PATH=/opt/bin:/usr/bin:/bin; export PATH\n  </p>\n  \n  <p>\n    # CONFIG\n  </p>\n  \n  <p>\n    # &#8212; LIST OF FILES/FOLDERS TO BACKUP if not specified via console\n  </p>\n  \n  <p>\n    FOLDERS=&#8221;/var/www/html /opt/sandbox&#8221;<br /> #FOLDERS=&#8221;&#8221;\n  </p>\n  \n  <p>\n    # &#8212; BACKUP HERE<br /> BACKUPFOLDER=&#8221;/opt/backup&#8221;\n  </p>\n  \n  <p>\n    # &#8212; ARCHIVE COMMAND<br /> COMPRESSCMD=&#8221;tar czfv &#8221;\n  </p>\n  \n  <p>\n    # &#8212; DO NOT EDIT BEYOND THIS LINE (unless if you knw what ur doing ;] ) &#8212;\n  </p>\n  \n  <p>\n    # Check if the folder exists if not make it<br /> [ ! -d $BACKUPFOLDER ] && mkdir -p $BACKUPFOLDER || :\n  </p>\n  \n  <p>\n    chown root:root $BACKUPFOLDER<br /> chmod 755 $BACKUPFOLDER\n  </p>\n  \n  <p>\n    # clean the screen<br /> clear\n  </p>\n  \n  <p>\n    echo lets start\n  </p>\n  \n  <p>\n    ## loop thru folders<br /> for itm in $FOLDERS; do\n  </p>\n  \n  <p>\n    FARCHIVE=$BACKUPFOLDER/`basename $itm`_`uname -n`_`date +%F`.tgz<br /> $COMPRESSCMD $FARCHIVE $itm\n  </p>\n  \n  <p>\n    done\n  </p>\n  \n  <p>\n    echo .. done\n  </p>\n</div>\n<p>Now name and save the file. I named mine <span style=\"font-weight: bold;\"><span style=\"font-style: italic;\">cabBackup.sh</span></span>.</p>\n<p>You need to make the script executable.</p>\n<div style=\"background-color: green; color: white; font-size: 8pt; padding: 3px;\">\n  > chmod 755 ./cabBackup.sh\n</div>\n<p>There you have it just run it from the console.</p>\n<div style=\"background-color: green; color: white; font-size: 8pt; padding: 3px;\">\n  > ./cabBackup.sh\n</div>\n<p>There are still some things we need to do to make it a fully fledged automation script like configuration files, some pre-process commands and error trapping. But what we have now serves our purpose very well. I’ll post revisions of this script so watch for that.</p>\n<p>Links<br>\n<a href=\"http://www.dartmouth.edu/~rc/classes/ksh/print_pages.shtml\">http://www.dartmouth.edu/~rc/classes/ksh/print_pages.shtml</a><br>\n<a href=\"http://tldp.org/LDP/abs/html/\">http://tldp.org/LDP/abs/html/</a><br>\n<a href=\"http://potatokorner.blogspot.com/2008/12/linux-snippet-backup-using-tar-and-gzip.html\">Linux: Snippet – Backup using Tar and gzip</a></p>","frontmatter":{"title":"How to Write a Backup Shell Script using Tar and Gnu Zip","date":"January 02, 2009","featured_image":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/how-to-write-a-backup-shell-script-using-tar-and-gnu-zip/","previous":{"fields":{"slug":"/linux-snippet-backup-using-tar-and-gzip/"},"frontmatter":{"title":"Linux: Snippet – Backup using Tar and gzip","contentType":null}},"next":{"fields":{"slug":"/m-i-stupid/"},"frontmatter":{"title":"M I STUPID?","contentType":null}}}}