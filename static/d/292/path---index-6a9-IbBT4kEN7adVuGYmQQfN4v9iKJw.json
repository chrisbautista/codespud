{"data":{"site":{"siteMetadata":{"title":"CodeSpud"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"<p>Tell me if you have the same situation as I am. You’re workstation cannot support the technology stack your project requires. Having VMs or Docker installed on my workstation is out of the question since it barely can support MS Office. So, in my case I have a development machine as a desktop that I remotely connect to via SSH. I’ve run through  a number of options when I need to remotely access my codebase. </p>","fields":{"slug":"/2019-05/remote-development-setups/"},"frontmatter":{"date":"May 19, 2019","title":"Remote development setups","featured_image":"/architecture-ssh.png"}}},{"node":{"excerpt":"<p>Hosting a project wiki or a personal blog on github is very easy with github-pages and static site generators like Jekyl.  You will end up with a site hosted on <code class=\"language-text\">&lt;Project/Repository Name&gt;.github.io</code>, if you’re happy with that then skip the rest of this article. If you want more or just curious on the steps then keep reading. </p>","fields":{"slug":"/how-to-use-custom-domains-to-github-pages/"},"frontmatter":{"date":"April 22, 2019","title":"How to Use Custom Domains with Github Pages","featured_image":null}}},{"node":{"excerpt":"<p>If you work with Linux or Unix-like operating systems like Ubuntu or the MacOS, you might be familiar with Bourne-Again Shell or <a href=\"https://www.gnu.org/software/bash/bash.html\">BASH</a> for short. This article will show you that with a little elbow grease, you can have your BASH prompt work for you and heck maybe have a little fun with it.</p>\n","fields":{"slug":"/make-bash-prompt-work/"},"frontmatter":{"date":"November 14, 2016","title":"Make Your Bash Prompt Work For You","featured_image":"/assets/2016/11/mybashpromot_in_action.png"}}},{"node":{"excerpt":"<p>I’ve got some leeway pushing <a title=\"Khrunus\" href=\"https://github.com/chrisbautista/Khrunus\" target=\"_blank\">Khrunus</a> off the ground.  I’ve always been successful using JavaScript’s timing functions but since Khrunus would primarily be built-in in AngularJS. I have to research a way to reuse my timing snippets into proper Angular code.  To study, I built a simple angular app:</p>","fields":{"slug":"/how-to-make-a-timer-stopwatch-using-angularjs/"},"frontmatter":{"date":"September 28, 2014","title":"How To Make A Timer/Stopwatch Using AngularJS","featured_image":"/assets/2014/09/angular-featured.png"}}},{"node":{"excerpt":"<p>I had a struck of inspiration earlier this week. I’ve always wanted to make this webapp that has been playing in my mind  for a while and I finally had some ideas to start on.  Of course, like any of my projects, the first thing I do is research. </p>","fields":{"slug":"/quick-and-free-way-to-set-up-your-app-using-heroku/"},"frontmatter":{"date":"April 20, 2014","title":"Quick and Free Way to Set Up Your App using Heroku","featured_image":"/assets/2014/08/features-tools-3dc022115028973bfa824eb354f1d87c.png"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"limit":5,"skip":0,"numPages":5,"currentPage":1}}