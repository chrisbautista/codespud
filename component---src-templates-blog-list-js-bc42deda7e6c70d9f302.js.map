{"version":3,"sources":["webpack:///./src/core/i18n.js","webpack:///./src/core/context.js","webpack:///./src/components/pagination.js","webpack:///./src/templates/blog-story.js","webpack:///./src/templates/blog-list.js"],"names":["More","Back","Next","Context","this","culture","i18n","PaginationNav","styled","ul","Pagination","numPages","prevPage","currentPage","nextPage","isFirst","isLast","showPageNumbers","ctx","type","IconType","to","rel","aria-label","Array","from","length","_","i","className","key","style","margin","Story","div","Excerpt","p","StoryWrapper","StoryBody","StoryImage","img","BlogStory","node","title","frontmatter","fields","slug","featured_image","src","alt","date","dangerouslySetInnerHTML","__html","excerpt","BlogList","BlogWrapper","BlogIndex","render","data","props","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","pageContext","pages","location","keywords","map","React","Component","pageQuery"],"mappings":"qKAAe,GACX,GAAO,CACHA,KAAM,OACNC,KAAM,OACNC,KAAM,SCFC,SAASC,IAEpBC,KAAKC,QAAU,KACfD,KAAKE,KAAOA,EAAKF,KAAKC,S,sFCApBE,EAAgBC,IAAOC,GAAV,gFAAGD,CAAH,icAsGJE,EAxDI,SAAC,GASb,IARLC,EAQI,EARJA,SACAC,EAOI,EAPJA,SACAC,EAMI,EANJA,YACAC,EAKI,EALJA,SACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,OAGI,IAFJC,uBAEI,SADJC,EACI,EADJA,IAEA,OACE,kBAACX,EAAD,KACE,4BACIQ,EAIE,8BACF,kBAAC,IAAD,CAAMI,KAAMC,IAASnB,QAJrB,kBAAC,OAAD,CAAMoB,GAAIT,EAAUU,IAAI,OAAOC,aAAYL,EAAIZ,KAAKL,MAClD,kBAAC,IAAD,CAAMkB,KAAMC,IAASnB,SAM1BgB,GACCO,MAAMC,KAAK,CAAEC,OAAQf,IAAY,SAACgB,EAAGC,GACnC,OAAIf,IAAgBe,EAAE,EACb,KAGF,wBACLC,UAAU,eACVC,IAAG,qBAAsBF,EAAI,GAC7BG,MAAO,CACLC,OAAQ,IAGV,kBAAC,OAAD,CACEX,GAAE,KAAY,IAANO,EAAU,GAAKA,EAAI,IAG1BA,EAAI,EAJP,MAIajB,OAInB,4BACIK,EAIE,8BACF,kBAAC,IAAD,CAAMG,KAAMC,IAASlB,QAJrB,kBAAC,OAAD,CAAMmB,GAAIP,EAAUQ,IAAI,OAAOC,aAAYL,EAAIZ,KAAKJ,MAClD,kBAAC,IAAD,CAAMiB,KAAMC,IAASlB,WC3F3B+B,EAAQzB,IAAO0B,IAAV,oEAAG1B,CAAH,kXA+BL2B,EAAU3B,IAAO4B,EAAV,sEAAG5B,CAAH,2GAQP6B,EAAe7B,IAAO0B,IAAV,2EAAG1B,CAAH,uHAQZ8B,EAAY9B,IAAO0B,IAAV,wEAAG1B,CAAH,oCAKT+B,EAAa/B,IAAOgC,IAAV,yEAAGhC,CAAH,wDAQD,SAASiC,EAAT,GAAkC,EAAbvB,IAAc,IAATwB,EAAQ,EAARA,KACjCC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAEpD,OACE,kBAACb,EAAD,KACE,kBAACI,EAAD,KACGK,EAAKE,YAAYG,gBAChB,kBAACR,EAAD,CACES,IAAKN,EAAKE,YAAYG,eACtBE,IAAKP,EAAKE,YAAYD,QAG1B,kBAACL,EAAD,KACE,4BACE,kBAAC,OAAD,CAAMjB,GAAIqB,EAAKG,OAAOC,KAAMH,MAAOA,GAChCA,IAGL,+BAAQD,EAAKE,YAAYM,MACzB,kBAACf,EAAD,CACEgB,wBAAyB,CACvBC,OAAQV,EAAKW,cC3E3B,IAAMC,EAAW9C,IAAO0B,IAAV,yEAAG1B,CAAH,+WAwBR+C,EAAc/C,IAAO0B,IAAV,4EAAG1B,CAAH,qCAMXgD,E,gLACJC,OAAA,WAAU,IACAC,EAAStD,KAAKuD,MAAdD,KACFE,EAAYF,EAAKG,KAAKC,aAAanB,MACnCoB,EAAQL,EAAKM,kBAAkBC,MAH9B,EAI2B7D,KAAKuD,MAAMO,YAArCrD,EAJD,EAICA,YAAaF,EAJd,EAIcA,SACfO,EAAM,IAAIf,EAEVgE,EACJ,kBAAC,EAAD,CACExD,SAAUA,EACVC,SAAUC,EAAc,GAAM,EAAI,IAAxB,KAAmCA,EAAc,GAC3DE,QAAyB,IAAhBF,EACTG,OAAQH,IAAgBF,EACxBE,YAAaA,EACbC,SAAUD,EAAc,IAAMF,EAApB,IAAmCA,EAAnC,KAAoDE,EAAc,GAC5EK,IAAKA,IAIT,OACE,kBAAC,IAAD,CAAQkD,SAAUhE,KAAKuD,MAAMS,SAAUzB,MAAOiB,GAC5C,kBAAC,IAAD,CAAKjB,MAAM,YACT0B,SAAU,CAAC,OAAD,iCAEZ,kBAACd,EAAD,KACE,6BAAMY,GACN,kBAACb,EAAD,KACGS,EAAMO,KAAI,YAAe,IAAZ5B,EAAW,EAAXA,KACZ,OAAO,kBAACD,EAAD,CAAWX,IAAKY,EAAKG,OAAOC,KAAM5B,IAAKA,EAAKwB,KAAMA,W,GA7B/C6B,IAAMC,WAwCjBC,GAFEjB,YAEO","file":"component---src-templates-blog-list-js-bc42deda7e6c70d9f302.js","sourcesContent":["export default {\r\n    'en' : {\r\n        More: 'More',\r\n        Back: 'Back',\r\n        Next: 'Next',\r\n    }\r\n}","import i18n from './i18n';\r\n\r\nexport default function Context (){\r\n\r\n    this.culture = 'en';\r\n    this.i18n = i18n[this.culture];\r\n    \r\n}","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Link } from \"gatsby\"\r\nimport Icon, { IconType } from \"./icons\"\r\n\r\nconst PaginationNav = styled.ul`\r\n  display: inline-flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  min-width: 50px;\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 3rem 0 0;\r\n  float: right;\r\n\r\n  @media screen and (max-width: 769px) {\r\n    margin: 2rem 0 0;\r\n  }\r\n\r\n  li {\r\n    margin-left: 0;\r\n    list-style: none;\r\n\r\n    span {\r\n      color: #aaa;\r\n    }\r\n  }\r\n\r\n  .page-numbers {\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  svg {\r\n    transform: scale(2);\r\n  }\r\n\r\n  a, span {\r\n    display: inline-flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 0 4px;\r\n    width: 44px;\r\n    height: 44px;\r\n  }\r\n  \r\n  a {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst Pagination = ({\r\n  numPages,\r\n  prevPage,\r\n  currentPage,\r\n  nextPage,\r\n  isFirst,\r\n  isLast,\r\n  showPageNumbers = false,\r\n  ctx,\r\n}) => {\r\n  return (\r\n    <PaginationNav>\r\n      <li>\r\n        {!isFirst ? (\r\n          <Link to={prevPage} rel=\"prev\" aria-label={ctx.i18n.Back}>\r\n            <Icon type={IconType.Back} />\r\n          </Link>\r\n        ) : <span>\r\n          <Icon type={IconType.Back} />\r\n        </span>}\r\n      </li>\r\n      {showPageNumbers &&\r\n        Array.from({ length: numPages }, (_, i) => {\r\n          if (currentPage !== i+1) {\r\n            return null;\r\n          }\r\n          \r\n          return <li\r\n            className=\"page-numbers\"\r\n            key={`pagination-number${i + 1}`}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            <Link\r\n              to={`/${i === 0 ? \"\" : i + 1}`}\r\n              \r\n            >\r\n              {i + 1} / {numPages}\r\n            </Link>\r\n          </li>\r\n        })}\r\n      <li>\r\n        {!isLast ? (\r\n          <Link to={nextPage} rel=\"next\" aria-label={ctx.i18n.Next}>\r\n            <Icon type={IconType.Next} />\r\n          </Link>\r\n        ) : <span>\r\n          <Icon type={IconType.Next} />\r\n        </span>\r\n        }\r\n      </li>\r\n    </PaginationNav>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport styled from \"styled-components\"\r\n\r\nconst Story = styled.div`\r\n  clear: both;\r\n  display: block;\r\n  margin-bottom: 1rem;\r\n  vertical-align: center;\r\n  box-shadow: 1px 1px 2px 0 rgba(0,0,0,0.15), 2px 2px 4px 0 rgba(0,0,0,0.15) ;\r\n  border-radius: 6px;\r\n  background-color: #fdfdfd;\r\n  overflow:hidden;\r\n  padding: 1rem;\r\n\r\n  h3 {\r\n    margin-top: 0;\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  :last-child {\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  :after {\r\n    content: \" \";\r\n    display: block;\r\n    clear: both;\r\n  }\r\n\r\n  @media (max-width: 659px) {\r\n    box-shadow: none;\r\n  }\r\n`\r\n\r\nconst Excerpt = styled.p`\r\n  text-align: left;\r\n  display: -webkit-box;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-line-clamp: 4; /* Change this line if you want. In this case it trimmed the text to 3 lines. */\r\n  overflow: hidden;\r\n`\r\n\r\nconst StoryWrapper = styled.div`\r\nbackground-color: #f6f6f6;\r\nborder-radius: 6px;\r\nheight: 100%;\r\nborder: 1px solid rgba(150,150,150,0.05);\r\ntext-align: center;\r\n`\r\n\r\nconst StoryBody = styled.div`\r\n  padding: 1rem;\r\n  min-height: 250px;\r\n`;\r\n\r\nconst StoryImage = styled.img`\r\n  height: 200px;\r\n  width: 100%;\r\n  margin: 0;\r\n  object-fit: cover;\r\n`;\r\n\r\n\r\nexport default function BlogStory({ ctx, node }) {\r\n  const title = node.frontmatter.title || node.fields.slug\r\n\r\n  return (\r\n    <Story>\r\n      <StoryWrapper>\r\n        {node.frontmatter.featured_image && (\r\n          <StoryImage\r\n            src={node.frontmatter.featured_image}\r\n            alt={node.frontmatter.title}\r\n          />\r\n        )}\r\n        <StoryBody>\r\n          <h3>\r\n            <Link to={node.fields.slug} title={title}>\r\n              {title}\r\n            </Link>\r\n          </h3>\r\n          <small>{node.frontmatter.date}</small>\r\n          <Excerpt\r\n            dangerouslySetInnerHTML={{\r\n              __html: node.excerpt,\r\n            }}\r\n          />\r\n        </StoryBody>\r\n      </StoryWrapper>\r\n    </Story>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Context from '../core/context';\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Pagination from \"../components/pagination\"\r\nimport BlogStory from './blog-story'\r\nimport styled from \"styled-components\"\r\n\r\nconst BlogList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill,minmax(300px, 1fr));\r\n  grid-template-rows: masonry;\r\n  grid-row-gap: 1.5rem;\r\n  grid-column-gap: 3rem;\r\n  grid-auto-flow: dense;\r\n  width: 100%;\r\n  padding-top: 2rem;\r\n\r\n  @media (max-width: 1024px) {\r\n    grid-row-gap: 1rem;\r\n    grid-column-gap: 2rem;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    grid-row-gap: 0.5rem;\r\n  }\r\n\r\n  @media (max-width: 659px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n`\r\nconst BlogWrapper = styled.div`\r\n  max-width: 1600px;\r\n  margin: 0 auto;\r\n`;\r\n\r\n\r\nclass BlogIndex extends React.Component {\r\n  render() {\r\n    const { data } = this.props\r\n    const siteTitle = data.site.siteMetadata.title\r\n    const posts = data.allMarkdownRemark.edges\r\n    const { currentPage, numPages } = this.props.pageContext\r\n    const ctx = new Context()\r\n\r\n    const pages = (\r\n      <Pagination\r\n        numPages={numPages}\r\n        prevPage={currentPage - 1 === 1 ? \"/\" : `/${(currentPage - 1)}`}\r\n        isFirst={currentPage === 1}\r\n        isLast={currentPage === numPages}\r\n        currentPage={currentPage}\r\n        nextPage={currentPage + 1 === numPages ? `/${numPages}` : `/${currentPage + 1}`}\r\n        ctx={ctx}\r\n      />\r\n    )\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO title=\"All posts\"\r\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\r\n        />\r\n        <BlogWrapper>\r\n          <div>{pages}</div>\r\n          <BlogList >\r\n            {posts.map(({ node }) => {\r\n              return <BlogStory key={node.fields.slug} ctx={ctx} node={node} />\r\n            })}\r\n          </BlogList>\r\n        </BlogWrapper>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query blogPageQuery($skip: Int!, $limit: Int!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      filter: {\r\n        frontmatter: { draft: { ne: true }, contentType: { nin: [\"works\", \"profile\"] } }\r\n      }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          html\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            featured_image\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}