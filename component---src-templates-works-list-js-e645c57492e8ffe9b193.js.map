{"version":3,"sources":["webpack:///./src/templates/works-list.js"],"names":["FeaturedImage","styled","img","Figure","figure","StyledLink","Link","H2","h2","Cards","div","Card","Description","p","AnimatedCard","node","post","title","frontmatter","fields","slug","to","featured_image","src","alt","dangerouslySetInnerHTML","__html","description","excerpt","WorksIndex","render","data","this","props","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","location","backgroundColor","keywords","map","key","Component"],"mappings":"0LAQMA,EAAgBC,IAAOC,IAAG,gFAAVD,CAAU,mDAK1BE,EAASF,IAAOG,OAAM,yEAAbH,CAAa,iDAMtBI,EAAaJ,YAAOK,QAAK,6EAAZL,CAAY,8FAWzBM,EAAKN,IAAOO,GAAE,qEAATP,CAAS,uCAKdQ,EAAQR,IAAOS,IAAG,wEAAVT,CAAU,2MAclBU,EAAOV,IAAOS,IAAG,uEAAVT,CAAU,0VA6BjBW,EAAcX,IAAOY,EAAC,8EAARZ,CAAQ,sBAwBtBa,EAAe,SAAH,GAAkB,IAC5BC,EADoB,EAAJC,KAEhBC,EAAQF,EAAKG,YAAYD,OAASF,EAAKI,OAAOC,KAEpD,QAAKL,GAGH,kBAACJ,EAAI,KACH,kBAACN,EAAU,CAACgB,GAAE,GAAKN,EAAKI,OAAOC,MAC7B,kBAACb,EAAE,KAAEU,GAEJF,EAAKG,YAAYI,gBAChB,kBAACnB,EAAM,KACL,kBAACH,EAAa,CAACuB,IAAKR,EAAKG,YAAYI,eAAgBE,IAAKP,KAG9D,kBAACL,EAAW,CACVa,wBAAyB,CACvBC,OAAQX,EAAKG,YAAYS,aAAeZ,EAAKa,cAQnDC,EAAU,8DAoBb,OApBa,6BACdC,OAAA,WACE,IAAQC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAanB,MACnCoB,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,kBAAC,IAAM,CACLC,SAAUR,KAAKC,MAAMO,SACrBvB,MAAOiB,EACPO,gBAAgB,eAEhB,kBAAC,IAAG,CAACxB,MAAM,YAAYyB,SAAU,CAAC,QAAD,eACjC,kBAACjC,EAAK,KACH4B,EAAMM,KAAI,gBAAG5B,EAAI,EAAJA,KAAI,OAChB,kBAACD,EAAY,CAAC8B,IAAK7B,EAAKG,YAAYD,MAAOD,KAAMD,UAK1D,EApBa,CAAS8B,aAuBVhB","file":"component---src-templates-works-list-js-e645c57492e8ffe9b193.js","sourcesContent":["import React, { Component } from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport styled from \"styled-components\"\n\nconst FeaturedImage = styled.img`\n  max-width: 100%;\n  margin: 0 auto 0;\n  display: block;\n`\nconst Figure = styled.figure`\n  overflow: hidden;\n  height: 150px;\n  margin: 2rem 0;\n`\n\nconst StyledLink = styled(Link)`\n  box-shadow: none;\n  color: #000;\n  text-decoration: none;\n\n  :hover {\n    text-decoration: none;\n    color: #000;\n  }\n`\n\nconst H2 = styled.h2`\n  font-size: 1.1em;\n  margin-top: 0.3em;\n`\n\nconst Cards = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  grid-gap: 1rem;\n  grid-auto-flow: dense;\n  max-width: 1600px;\n  margin: 0 auto;\n\n  @media (max-width: 659px) {\n    display: flex;\n    flex-direction: column;\n  }\n`\n\nconst Card = styled.div`\n  font-size: 0.875rem;\n  box-shadow: 0 5px 22px 0 rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  padding: 2rem 1.7em;\n  background-color: #fff;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n\n  &:hover {\n    box-shadow: 0 -5px 22px 0 rgba(0, 0, 0, 0.1);\n  }\n\n  @media (max-width: 659px) {\n    display: flex;\n    flex-direction: column;\n    margin: 0 0 1rem;\n  }\n\n  & > a > p {\n    font-weight: normal;\n  }\n\n  h3 {\n    font-weight: 600;\n  }\n`\n\nconst Description = styled.p`\n  text-align: left;\n`\n\n// const Title = styled.h1`\n// font-weight: bold;\n// margin-left: auto;\n// margin-right: auto;\n// font-weight: bold;\n// font-size: 5rem;\n// text-align: left;\n// margin-top: 2rem;\n// margin-bottom: 2rem;\n// border-bottom: 2px solid #ddd;\n// padding-bottom: 2rem;\n\n// max-width: 1600px;\n\n//   @media screen and (max-width: 720px) {\n//     font-size: 3.5rem;\n//     padding-bottom: 1rem;\n//   }\n// `\n\nconst AnimatedCard = ({ post }) => {\n  const node = post\n  const title = node.frontmatter.title || node.fields.slug\n\n  if (!node) return false\n\n  return (\n    <Card>\n      <StyledLink to={`${node.fields.slug}`}>\n        <H2>{title}</H2>\n\n        {node.frontmatter.featured_image && (\n          <Figure>\n            <FeaturedImage src={node.frontmatter.featured_image} alt={title} />\n          </Figure>\n        )}\n        <Description\n          dangerouslySetInnerHTML={{\n            __html: node.frontmatter.description || node.excerpt,\n          }}\n        />\n      </StyledLink>\n    </Card>\n  )\n}\n\nclass WorksIndex extends Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout\n        location={this.props.location}\n        title={siteTitle}\n        backgroundColor=\"transparent\"\n      >\n        <SEO title=\"Portfolio\" keywords={[`works`, `portfolio`]} />\n        <Cards>\n          {posts.map(({ node }) => (\n            <AnimatedCard key={node.frontmatter.title} post={node} />\n          ))}\n        </Cards>\n      </Layout>\n    )\n  }\n}\n\nexport default WorksIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {\n        frontmatter: { draft: { ne: true }, contentType: { in: [\"works\"] } }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            featured_image\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}